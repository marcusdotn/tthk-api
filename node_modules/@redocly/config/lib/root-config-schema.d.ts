import { AuthProviderType, ApigeeDevOnboardingIntegrationAuthType } from './constants';
export declare const oidcIssuerMetadataSchema: {
    readonly type: "object";
    readonly properties: {
        readonly end_session_endpoint: {
            readonly type: "string";
        };
        readonly token_endpoint: {
            readonly type: "string";
        };
        readonly authorization_endpoint: {
            readonly type: "string";
        };
        readonly jwks_uri: {
            readonly type: "string";
        };
    };
    readonly required: readonly ["token_endpoint", "authorization_endpoint"];
    readonly additionalProperties: true;
};
export declare const oidcProviderConfigSchema: {
    readonly type: "object";
    readonly properties: {
        readonly type: {
            readonly type: "string";
            readonly const: AuthProviderType.OIDC;
        };
        readonly title: {
            readonly type: "string";
        };
        readonly pkce: {
            readonly type: "boolean";
            readonly default: false;
        };
        readonly configurationUrl: {
            readonly type: "string";
            readonly minLength: 1;
        };
        readonly configuration: {
            readonly type: "object";
            readonly properties: {
                readonly end_session_endpoint: {
                    readonly type: "string";
                };
                readonly token_endpoint: {
                    readonly type: "string";
                };
                readonly authorization_endpoint: {
                    readonly type: "string";
                };
                readonly jwks_uri: {
                    readonly type: "string";
                };
            };
            readonly required: readonly ["token_endpoint", "authorization_endpoint"];
            readonly additionalProperties: true;
        };
        readonly clientId: {
            readonly type: "string";
            readonly minLength: 1;
        };
        readonly clientSecret: {
            readonly type: "string";
            readonly minLength: 0;
        };
        readonly teamsClaimName: {
            readonly type: "string";
        };
        readonly teamsClaimMap: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly type: "string";
            };
        };
        readonly defaultTeams: {
            readonly type: "array";
            readonly items: {
                readonly type: "string";
            };
        };
        readonly scopes: {
            readonly type: "array";
            readonly items: {
                readonly type: "string";
            };
        };
        readonly tokenExpirationTime: {
            readonly type: "number";
        };
        readonly authorizationRequestCustomParams: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly type: "string";
            };
        };
        readonly tokenRequestCustomParams: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly type: "string";
            };
        };
        readonly audience: {
            readonly type: "array";
            readonly items: {
                readonly type: "string";
            };
        };
    };
    readonly required: readonly ["type", "clientId"];
    readonly oneOf: readonly [{
        readonly required: readonly ["configurationUrl"];
    }, {
        readonly required: readonly ["configuration"];
    }];
    readonly additionalProperties: false;
};
export declare const saml2ProviderConfigSchema: {
    readonly type: "object";
    readonly properties: {
        readonly type: {
            readonly type: "string";
            readonly const: AuthProviderType.SAML2;
        };
        readonly title: {
            readonly type: "string";
        };
        readonly issuerId: {
            readonly type: "string";
        };
        readonly entityId: {
            readonly type: "string";
        };
        readonly ssoUrl: {
            readonly type: "string";
        };
        readonly x509PublicCert: {
            readonly type: "string";
        };
        readonly teamsAttributeName: {
            readonly type: "string";
            readonly default: "https://redocly.com/sso/teams";
        };
        readonly teamsAttributeMap: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly type: "string";
            };
        };
        readonly defaultTeams: {
            readonly type: "array";
            readonly items: {
                readonly type: "string";
            };
        };
    };
    readonly additionalProperties: false;
    readonly required: readonly ["type", "issuerId", "ssoUrl", "x509PublicCert"];
};
export declare const basicAuthProviderConfigSchema: {
    readonly type: "object";
    readonly properties: {
        readonly type: {
            readonly type: "string";
            readonly const: AuthProviderType.BASIC;
        };
        readonly title: {
            readonly type: "string";
        };
        readonly credentials: {
            readonly type: "array";
            readonly items: {
                readonly type: "object";
                readonly properties: {
                    readonly username: {
                        readonly type: "string";
                    };
                    readonly password: {
                        readonly type: "string";
                    };
                    readonly passwordHash: {
                        readonly type: "string";
                    };
                    readonly teams: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "string";
                        };
                    };
                };
                readonly required: readonly ["username"];
                readonly additionalProperties: false;
            };
        };
    };
    readonly required: readonly ["type", "credentials"];
    readonly additionalProperties: false;
};
export declare const authProviderConfigSchema: {
    readonly oneOf: readonly [{
        readonly type: "object";
        readonly properties: {
            readonly type: {
                readonly type: "string";
                readonly const: AuthProviderType.OIDC;
            };
            readonly title: {
                readonly type: "string";
            };
            readonly pkce: {
                readonly type: "boolean";
                readonly default: false;
            };
            readonly configurationUrl: {
                readonly type: "string";
                readonly minLength: 1;
            };
            readonly configuration: {
                readonly type: "object";
                readonly properties: {
                    readonly end_session_endpoint: {
                        readonly type: "string";
                    };
                    readonly token_endpoint: {
                        readonly type: "string";
                    };
                    readonly authorization_endpoint: {
                        readonly type: "string";
                    };
                    readonly jwks_uri: {
                        readonly type: "string";
                    };
                };
                readonly required: readonly ["token_endpoint", "authorization_endpoint"];
                readonly additionalProperties: true;
            };
            readonly clientId: {
                readonly type: "string";
                readonly minLength: 1;
            };
            readonly clientSecret: {
                readonly type: "string";
                readonly minLength: 0;
            };
            readonly teamsClaimName: {
                readonly type: "string";
            };
            readonly teamsClaimMap: {
                readonly type: "object";
                readonly additionalProperties: {
                    readonly type: "string";
                };
            };
            readonly defaultTeams: {
                readonly type: "array";
                readonly items: {
                    readonly type: "string";
                };
            };
            readonly scopes: {
                readonly type: "array";
                readonly items: {
                    readonly type: "string";
                };
            };
            readonly tokenExpirationTime: {
                readonly type: "number";
            };
            readonly authorizationRequestCustomParams: {
                readonly type: "object";
                readonly additionalProperties: {
                    readonly type: "string";
                };
            };
            readonly tokenRequestCustomParams: {
                readonly type: "object";
                readonly additionalProperties: {
                    readonly type: "string";
                };
            };
            readonly audience: {
                readonly type: "array";
                readonly items: {
                    readonly type: "string";
                };
            };
        };
        readonly required: readonly ["type", "clientId"];
        readonly oneOf: readonly [{
            readonly required: readonly ["configurationUrl"];
        }, {
            readonly required: readonly ["configuration"];
        }];
        readonly additionalProperties: false;
    }, {
        readonly type: "object";
        readonly properties: {
            readonly type: {
                readonly type: "string";
                readonly const: AuthProviderType.SAML2;
            };
            readonly title: {
                readonly type: "string";
            };
            readonly issuerId: {
                readonly type: "string";
            };
            readonly entityId: {
                readonly type: "string";
            };
            readonly ssoUrl: {
                readonly type: "string";
            };
            readonly x509PublicCert: {
                readonly type: "string";
            };
            readonly teamsAttributeName: {
                readonly type: "string";
                readonly default: "https://redocly.com/sso/teams";
            };
            readonly teamsAttributeMap: {
                readonly type: "object";
                readonly additionalProperties: {
                    readonly type: "string";
                };
            };
            readonly defaultTeams: {
                readonly type: "array";
                readonly items: {
                    readonly type: "string";
                };
            };
        };
        readonly additionalProperties: false;
        readonly required: readonly ["type", "issuerId", "ssoUrl", "x509PublicCert"];
    }, {
        readonly type: "object";
        readonly properties: {
            readonly type: {
                readonly type: "string";
                readonly const: AuthProviderType.BASIC;
            };
            readonly title: {
                readonly type: "string";
            };
            readonly credentials: {
                readonly type: "array";
                readonly items: {
                    readonly type: "object";
                    readonly properties: {
                        readonly username: {
                            readonly type: "string";
                        };
                        readonly password: {
                            readonly type: "string";
                        };
                        readonly passwordHash: {
                            readonly type: "string";
                        };
                        readonly teams: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                        };
                    };
                    readonly required: readonly ["username"];
                    readonly additionalProperties: false;
                };
            };
        };
        readonly required: readonly ["type", "credentials"];
        readonly additionalProperties: false;
    }];
    readonly discriminator: {
        readonly propertyName: "type";
    };
};
export declare const ssoOnPremConfigSchema: {
    readonly type: "object";
    readonly additionalProperties: {
        readonly oneOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly type: {
                    readonly type: "string";
                    readonly const: AuthProviderType.OIDC;
                };
                readonly title: {
                    readonly type: "string";
                };
                readonly pkce: {
                    readonly type: "boolean";
                    readonly default: false;
                };
                readonly configurationUrl: {
                    readonly type: "string";
                    readonly minLength: 1;
                };
                readonly configuration: {
                    readonly type: "object";
                    readonly properties: {
                        readonly end_session_endpoint: {
                            readonly type: "string";
                        };
                        readonly token_endpoint: {
                            readonly type: "string";
                        };
                        readonly authorization_endpoint: {
                            readonly type: "string";
                        };
                        readonly jwks_uri: {
                            readonly type: "string";
                        };
                    };
                    readonly required: readonly ["token_endpoint", "authorization_endpoint"];
                    readonly additionalProperties: true;
                };
                readonly clientId: {
                    readonly type: "string";
                    readonly minLength: 1;
                };
                readonly clientSecret: {
                    readonly type: "string";
                    readonly minLength: 0;
                };
                readonly teamsClaimName: {
                    readonly type: "string";
                };
                readonly teamsClaimMap: {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "string";
                    };
                };
                readonly defaultTeams: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
                readonly scopes: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
                readonly tokenExpirationTime: {
                    readonly type: "number";
                };
                readonly authorizationRequestCustomParams: {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "string";
                    };
                };
                readonly tokenRequestCustomParams: {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "string";
                    };
                };
                readonly audience: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly required: readonly ["type", "clientId"];
            readonly oneOf: readonly [{
                readonly required: readonly ["configurationUrl"];
            }, {
                readonly required: readonly ["configuration"];
            }];
            readonly additionalProperties: false;
        }, {
            readonly type: "object";
            readonly properties: {
                readonly type: {
                    readonly type: "string";
                    readonly const: AuthProviderType.SAML2;
                };
                readonly title: {
                    readonly type: "string";
                };
                readonly issuerId: {
                    readonly type: "string";
                };
                readonly entityId: {
                    readonly type: "string";
                };
                readonly ssoUrl: {
                    readonly type: "string";
                };
                readonly x509PublicCert: {
                    readonly type: "string";
                };
                readonly teamsAttributeName: {
                    readonly type: "string";
                    readonly default: "https://redocly.com/sso/teams";
                };
                readonly teamsAttributeMap: {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "string";
                    };
                };
                readonly defaultTeams: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly additionalProperties: false;
            readonly required: readonly ["type", "issuerId", "ssoUrl", "x509PublicCert"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly type: {
                    readonly type: "string";
                    readonly const: AuthProviderType.BASIC;
                };
                readonly title: {
                    readonly type: "string";
                };
                readonly credentials: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly username: {
                                readonly type: "string";
                            };
                            readonly password: {
                                readonly type: "string";
                            };
                            readonly passwordHash: {
                                readonly type: "string";
                            };
                            readonly teams: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly required: readonly ["username"];
                        readonly additionalProperties: false;
                    };
                };
            };
            readonly required: readonly ["type", "credentials"];
            readonly additionalProperties: false;
        }];
        readonly discriminator: {
            readonly propertyName: "type";
        };
    };
};
export declare const ssoConfigSchema: {
    readonly oneOf: readonly [{
        readonly type: "array";
        readonly items: {
            readonly type: "string";
            readonly enum: readonly ["REDOCLY", "CORPORATE", "GUEST"];
        };
        readonly uniqueItems: true;
    }, {
        readonly type: "string";
        readonly enum: readonly ["REDOCLY", "CORPORATE", "GUEST"];
    }];
};
export declare const redirectConfigSchema: {
    readonly type: "object";
    readonly properties: {
        readonly to: {
            readonly type: "string";
        };
        readonly type: {
            readonly type: "number";
            readonly default: 301;
        };
    };
    readonly additionalProperties: false;
};
export declare const redirectsConfigSchema: {
    readonly type: "object";
    readonly additionalProperties: {
        readonly type: "object";
        readonly properties: {
            readonly to: {
                readonly type: "string";
            };
            readonly type: {
                readonly type: "number";
                readonly default: 301;
            };
        };
        readonly additionalProperties: false;
    };
    readonly default: {};
};
export declare const apiConfigSchema: {
    readonly type: "object";
    readonly properties: {
        readonly root: {
            readonly type: "string";
        };
        readonly output: {
            readonly type: "string";
            readonly pattern: "(.ya?ml|.json)$";
        };
        readonly rbac: {
            readonly type: "object";
            readonly additionalProperties: true;
        };
        readonly theme: {
            readonly type: "object";
            readonly properties: {
                readonly openapi: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly graphql: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
            };
            readonly additionalProperties: false;
        };
        readonly title: {
            readonly type: "string";
        };
        readonly metadata: {
            readonly type: "object";
            readonly additionalProperties: true;
        };
        readonly rules: {
            readonly type: "object";
            readonly additionalProperties: true;
        };
        readonly decorators: {
            readonly type: "object";
            readonly additionalProperties: true;
        };
        readonly preprocessors: {
            readonly type: "object";
            readonly additionalProperties: true;
        };
    };
    readonly required: readonly ["root"];
};
export declare const seoConfigSchema: {
    readonly type: "object";
    readonly properties: {
        readonly title: {
            readonly type: "string";
        };
        readonly description: {
            readonly type: "string";
        };
        readonly siteUrl: {
            readonly type: "string";
        };
        readonly image: {
            readonly type: "string";
        };
        readonly keywords: {
            readonly oneOf: readonly [{
                readonly type: "array";
                readonly items: {
                    readonly type: "string";
                };
            }, {
                readonly type: "string";
            }];
        };
        readonly lang: {
            readonly type: "string";
        };
        readonly jsonLd: {
            readonly type: "object";
        };
        readonly meta: {
            readonly type: "array";
            readonly items: {
                readonly type: "object";
                readonly properties: {
                    readonly name: {
                        readonly type: "string";
                    };
                    readonly content: {
                        readonly type: "string";
                    };
                };
                readonly required: readonly ["name", "content"];
                readonly additionalProperties: false;
            };
        };
    };
    readonly additionalProperties: false;
};
export declare const rbacScopeItemsSchema: {
    readonly type: "object";
    readonly additionalProperties: {
        readonly type: "string";
    };
};
export declare const rbacConfigSchema: {
    readonly type: "object";
    readonly properties: {
        readonly teamNamePatterns: {
            readonly type: "array";
            readonly items: {
                readonly type: "string";
            };
        };
        readonly teamFolders: {
            readonly type: "array";
            readonly items: {
                readonly type: "string";
            };
        };
        readonly teamFoldersBaseRoles: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly type: "string";
            };
        };
        readonly cms: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly type: "string";
            };
        };
        readonly reunite: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly type: "string";
            };
        };
        readonly content: {
            readonly type: "object";
            readonly properties: {
                readonly '**': {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "string";
                    };
                };
            };
            readonly additionalProperties: {
                readonly type: "object";
                readonly additionalProperties: {
                    readonly type: "string";
                };
            };
        };
    };
    readonly additionalProperties: {
        readonly type: "object";
        readonly additionalProperties: {
            readonly type: "string";
        };
    };
};
export declare const graviteeAdapterConfigSchema: {
    readonly type: "object";
    readonly properties: {
        readonly type: {
            readonly type: "string";
            readonly const: "GRAVITEE";
        };
        readonly apiBaseUrl: {
            readonly type: "string";
        };
        readonly env: {
            readonly type: "string";
        };
        readonly allowApiProductsOutsideCatalog: {
            readonly type: "boolean";
            readonly default: false;
        };
        readonly stage: {
            readonly type: "string";
            readonly default: "non-production";
        };
        readonly auth: {
            readonly type: "object";
            readonly properties: {
                readonly static: {
                    readonly type: "string";
                };
            };
        };
    };
    readonly additionalProperties: false;
    readonly required: readonly ["type", "apiBaseUrl"];
};
export declare const apigeeAdapterAuthOauth2Schema: {
    readonly type: "object";
    readonly properties: {
        readonly type: {
            readonly type: "string";
            readonly const: ApigeeDevOnboardingIntegrationAuthType.OAUTH2;
        };
        readonly tokenEndpoint: {
            readonly type: "string";
        };
        readonly clientId: {
            readonly type: "string";
        };
        readonly clientSecret: {
            readonly type: "string";
        };
    };
    readonly additionalProperties: false;
    readonly required: readonly ["type", "tokenEndpoint", "clientId", "clientSecret"];
};
export declare const apigeeAdapterAuthServiceAccountSchema: {
    readonly type: "object";
    readonly properties: {
        readonly type: {
            readonly type: "string";
            readonly const: ApigeeDevOnboardingIntegrationAuthType.SERVICE_ACCOUNT;
        };
        readonly serviceAccountEmail: {
            readonly type: "string";
        };
        readonly serviceAccountPrivateKey: {
            readonly type: "string";
        };
    };
    readonly additionalProperties: false;
    readonly required: readonly ["type", "serviceAccountEmail", "serviceAccountPrivateKey"];
};
export declare const apigeeXAdapterConfigSchema: {
    readonly type: "object";
    readonly properties: {
        readonly type: {
            readonly type: "string";
            readonly const: "APIGEE_X";
        };
        readonly apiUrl: {
            readonly type: "string";
        };
        readonly stage: {
            readonly type: "string";
            readonly default: "non-production";
        };
        readonly organizationName: {
            readonly type: "string";
        };
        readonly ignoreApiProducts: {
            readonly type: "array";
            readonly items: {
                readonly type: "string";
            };
        };
        readonly allowApiProductsOutsideCatalog: {
            readonly type: "boolean";
            readonly default: false;
        };
        readonly auth: {
            readonly type: "object";
            readonly oneOf: readonly [{
                readonly type: "object";
                readonly properties: {
                    readonly type: {
                        readonly type: "string";
                        readonly const: ApigeeDevOnboardingIntegrationAuthType.OAUTH2;
                    };
                    readonly tokenEndpoint: {
                        readonly type: "string";
                    };
                    readonly clientId: {
                        readonly type: "string";
                    };
                    readonly clientSecret: {
                        readonly type: "string";
                    };
                };
                readonly additionalProperties: false;
                readonly required: readonly ["type", "tokenEndpoint", "clientId", "clientSecret"];
            }, {
                readonly type: "object";
                readonly properties: {
                    readonly type: {
                        readonly type: "string";
                        readonly const: ApigeeDevOnboardingIntegrationAuthType.SERVICE_ACCOUNT;
                    };
                    readonly serviceAccountEmail: {
                        readonly type: "string";
                    };
                    readonly serviceAccountPrivateKey: {
                        readonly type: "string";
                    };
                };
                readonly additionalProperties: false;
                readonly required: readonly ["type", "serviceAccountEmail", "serviceAccountPrivateKey"];
            }];
            readonly discriminator: {
                readonly propertyName: "type";
            };
        };
    };
    readonly additionalProperties: false;
    readonly required: readonly ["type", "organizationName", "auth"];
};
export declare const apigeeEdgeAdapterConfigSchema: {
    readonly properties: {
        readonly type: {
            readonly type: "string";
            readonly const: "APIGEE_EDGE";
        };
        readonly apiUrl: {
            readonly type: "string";
        };
        readonly stage: {
            readonly type: "string";
            readonly default: "non-production";
        };
        readonly organizationName: {
            readonly type: "string";
        };
        readonly ignoreApiProducts: {
            readonly type: "array";
            readonly items: {
                readonly type: "string";
            };
        };
        readonly allowApiProductsOutsideCatalog: {
            readonly type: "boolean";
            readonly default: false;
        };
        readonly auth: {
            readonly type: "object";
            readonly oneOf: readonly [{
                readonly type: "object";
                readonly properties: {
                    readonly type: {
                        readonly type: "string";
                        readonly const: ApigeeDevOnboardingIntegrationAuthType.OAUTH2;
                    };
                    readonly tokenEndpoint: {
                        readonly type: "string";
                    };
                    readonly clientId: {
                        readonly type: "string";
                    };
                    readonly clientSecret: {
                        readonly type: "string";
                    };
                };
                readonly additionalProperties: false;
                readonly required: readonly ["type", "tokenEndpoint", "clientId", "clientSecret"];
            }, {
                readonly type: "object";
                readonly properties: {
                    readonly type: {
                        readonly type: "string";
                        readonly const: ApigeeDevOnboardingIntegrationAuthType.SERVICE_ACCOUNT;
                    };
                    readonly serviceAccountEmail: {
                        readonly type: "string";
                    };
                    readonly serviceAccountPrivateKey: {
                        readonly type: "string";
                    };
                };
                readonly additionalProperties: false;
                readonly required: readonly ["type", "serviceAccountEmail", "serviceAccountPrivateKey"];
            }];
            readonly discriminator: {
                readonly propertyName: "type";
            };
        };
    };
    readonly type: "object";
    readonly additionalProperties: false;
    readonly required: readonly ["type", "organizationName", "auth"];
};
export declare const devOnboardingAdapterConfigSchema: {
    readonly type: "object";
    readonly oneOf: readonly [{
        readonly type: "object";
        readonly properties: {
            readonly type: {
                readonly type: "string";
                readonly const: "APIGEE_X";
            };
            readonly apiUrl: {
                readonly type: "string";
            };
            readonly stage: {
                readonly type: "string";
                readonly default: "non-production";
            };
            readonly organizationName: {
                readonly type: "string";
            };
            readonly ignoreApiProducts: {
                readonly type: "array";
                readonly items: {
                    readonly type: "string";
                };
            };
            readonly allowApiProductsOutsideCatalog: {
                readonly type: "boolean";
                readonly default: false;
            };
            readonly auth: {
                readonly type: "object";
                readonly oneOf: readonly [{
                    readonly type: "object";
                    readonly properties: {
                        readonly type: {
                            readonly type: "string";
                            readonly const: ApigeeDevOnboardingIntegrationAuthType.OAUTH2;
                        };
                        readonly tokenEndpoint: {
                            readonly type: "string";
                        };
                        readonly clientId: {
                            readonly type: "string";
                        };
                        readonly clientSecret: {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly required: readonly ["type", "tokenEndpoint", "clientId", "clientSecret"];
                }, {
                    readonly type: "object";
                    readonly properties: {
                        readonly type: {
                            readonly type: "string";
                            readonly const: ApigeeDevOnboardingIntegrationAuthType.SERVICE_ACCOUNT;
                        };
                        readonly serviceAccountEmail: {
                            readonly type: "string";
                        };
                        readonly serviceAccountPrivateKey: {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly required: readonly ["type", "serviceAccountEmail", "serviceAccountPrivateKey"];
                }];
                readonly discriminator: {
                    readonly propertyName: "type";
                };
            };
        };
        readonly additionalProperties: false;
        readonly required: readonly ["type", "organizationName", "auth"];
    }, {
        readonly properties: {
            readonly type: {
                readonly type: "string";
                readonly const: "APIGEE_EDGE";
            };
            readonly apiUrl: {
                readonly type: "string";
            };
            readonly stage: {
                readonly type: "string";
                readonly default: "non-production";
            };
            readonly organizationName: {
                readonly type: "string";
            };
            readonly ignoreApiProducts: {
                readonly type: "array";
                readonly items: {
                    readonly type: "string";
                };
            };
            readonly allowApiProductsOutsideCatalog: {
                readonly type: "boolean";
                readonly default: false;
            };
            readonly auth: {
                readonly type: "object";
                readonly oneOf: readonly [{
                    readonly type: "object";
                    readonly properties: {
                        readonly type: {
                            readonly type: "string";
                            readonly const: ApigeeDevOnboardingIntegrationAuthType.OAUTH2;
                        };
                        readonly tokenEndpoint: {
                            readonly type: "string";
                        };
                        readonly clientId: {
                            readonly type: "string";
                        };
                        readonly clientSecret: {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly required: readonly ["type", "tokenEndpoint", "clientId", "clientSecret"];
                }, {
                    readonly type: "object";
                    readonly properties: {
                        readonly type: {
                            readonly type: "string";
                            readonly const: ApigeeDevOnboardingIntegrationAuthType.SERVICE_ACCOUNT;
                        };
                        readonly serviceAccountEmail: {
                            readonly type: "string";
                        };
                        readonly serviceAccountPrivateKey: {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly required: readonly ["type", "serviceAccountEmail", "serviceAccountPrivateKey"];
                }];
                readonly discriminator: {
                    readonly propertyName: "type";
                };
            };
        };
        readonly type: "object";
        readonly additionalProperties: false;
        readonly required: readonly ["type", "organizationName", "auth"];
    }, {
        readonly type: "object";
        readonly properties: {
            readonly type: {
                readonly type: "string";
                readonly const: "GRAVITEE";
            };
            readonly apiBaseUrl: {
                readonly type: "string";
            };
            readonly env: {
                readonly type: "string";
            };
            readonly allowApiProductsOutsideCatalog: {
                readonly type: "boolean";
                readonly default: false;
            };
            readonly stage: {
                readonly type: "string";
                readonly default: "non-production";
            };
            readonly auth: {
                readonly type: "object";
                readonly properties: {
                    readonly static: {
                        readonly type: "string";
                    };
                };
            };
        };
        readonly additionalProperties: false;
        readonly required: readonly ["type", "apiBaseUrl"];
    }];
    readonly discriminator: {
        readonly propertyName: "type";
    };
};
export declare const i18ConfigSchema: {
    readonly type: "object";
    readonly properties: {
        readonly defaultLocale: {
            readonly type: "string";
        };
        readonly locales: {
            readonly type: "array";
            readonly items: {
                readonly type: "object";
                readonly properties: {
                    readonly code: {
                        readonly type: "string";
                    };
                    readonly name: {
                        readonly type: "string";
                    };
                };
                readonly required: readonly ["code"];
            };
        };
    };
    readonly additionalProperties: false;
    readonly required: readonly ["defaultLocale"];
};
export declare const redoclyConfigSchema: {
    readonly type: "object";
    readonly properties: {
        readonly licenseKey: {
            readonly type: "string";
        };
        readonly redirects: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly type: "object";
                readonly properties: {
                    readonly to: {
                        readonly type: "string";
                    };
                    readonly type: {
                        readonly type: "number";
                        readonly default: 301;
                    };
                };
                readonly additionalProperties: false;
            };
            readonly default: {};
        };
        readonly seo: {
            readonly type: "object";
            readonly properties: {
                readonly title: {
                    readonly type: "string";
                };
                readonly description: {
                    readonly type: "string";
                };
                readonly siteUrl: {
                    readonly type: "string";
                };
                readonly image: {
                    readonly type: "string";
                };
                readonly keywords: {
                    readonly oneOf: readonly [{
                        readonly type: "array";
                        readonly items: {
                            readonly type: "string";
                        };
                    }, {
                        readonly type: "string";
                    }];
                };
                readonly lang: {
                    readonly type: "string";
                };
                readonly jsonLd: {
                    readonly type: "object";
                };
                readonly meta: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly name: {
                                readonly type: "string";
                            };
                            readonly content: {
                                readonly type: "string";
                            };
                        };
                        readonly required: readonly ["name", "content"];
                        readonly additionalProperties: false;
                    };
                };
            };
            readonly additionalProperties: false;
        };
        readonly rbac: {
            readonly type: "object";
            readonly properties: {
                readonly teamNamePatterns: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
                readonly teamFolders: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
                readonly teamFoldersBaseRoles: {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "string";
                    };
                };
                readonly cms: {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "string";
                    };
                };
                readonly reunite: {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "string";
                    };
                };
                readonly content: {
                    readonly type: "object";
                    readonly properties: {
                        readonly '**': {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly type: "string";
                            };
                        };
                    };
                    readonly additionalProperties: {
                        readonly type: "object";
                        readonly additionalProperties: {
                            readonly type: "string";
                        };
                    };
                };
            };
            readonly additionalProperties: {
                readonly type: "object";
                readonly additionalProperties: {
                    readonly type: "string";
                };
            };
        };
        readonly responseHeaders: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly type: "array";
                readonly items: {
                    readonly type: "object";
                    readonly properties: {
                        readonly name: {
                            readonly type: "string";
                        };
                        readonly value: {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly required: readonly ["name", "value"];
                };
            };
        };
        readonly mockServer: {
            readonly type: "object";
            readonly properties: {
                readonly off: {
                    readonly type: "boolean";
                    readonly default: false;
                };
                readonly position: {
                    readonly type: "string";
                    readonly enum: readonly ["first", "last", "replace", "off"];
                    readonly default: "first";
                };
                readonly strictExamples: {
                    readonly type: "boolean";
                    readonly default: false;
                };
                readonly errorIfForcedExampleNotFound: {
                    readonly type: "boolean";
                    readonly default: false;
                };
                readonly description: {
                    readonly type: "string";
                };
            };
        };
        readonly apis: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly type: "object";
                readonly properties: {
                    readonly root: {
                        readonly type: "string";
                    };
                    readonly output: {
                        readonly type: "string";
                        readonly pattern: "(.ya?ml|.json)$";
                    };
                    readonly rbac: {
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                    readonly theme: {
                        readonly type: "object";
                        readonly properties: {
                            readonly openapi: {
                                readonly type: "object";
                                readonly additionalProperties: true;
                            };
                            readonly graphql: {
                                readonly type: "object";
                                readonly additionalProperties: true;
                            };
                        };
                        readonly additionalProperties: false;
                    };
                    readonly title: {
                        readonly type: "string";
                    };
                    readonly metadata: {
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                    readonly rules: {
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                    readonly decorators: {
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                    readonly preprocessors: {
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                };
                readonly required: readonly ["root"];
            };
        };
        readonly ssoOnPrem: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly oneOf: readonly [{
                    readonly type: "object";
                    readonly properties: {
                        readonly type: {
                            readonly type: "string";
                            readonly const: AuthProviderType.OIDC;
                        };
                        readonly title: {
                            readonly type: "string";
                        };
                        readonly pkce: {
                            readonly type: "boolean";
                            readonly default: false;
                        };
                        readonly configurationUrl: {
                            readonly type: "string";
                            readonly minLength: 1;
                        };
                        readonly configuration: {
                            readonly type: "object";
                            readonly properties: {
                                readonly end_session_endpoint: {
                                    readonly type: "string";
                                };
                                readonly token_endpoint: {
                                    readonly type: "string";
                                };
                                readonly authorization_endpoint: {
                                    readonly type: "string";
                                };
                                readonly jwks_uri: {
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["token_endpoint", "authorization_endpoint"];
                            readonly additionalProperties: true;
                        };
                        readonly clientId: {
                            readonly type: "string";
                            readonly minLength: 1;
                        };
                        readonly clientSecret: {
                            readonly type: "string";
                            readonly minLength: 0;
                        };
                        readonly teamsClaimName: {
                            readonly type: "string";
                        };
                        readonly teamsClaimMap: {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly type: "string";
                            };
                        };
                        readonly defaultTeams: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                        };
                        readonly scopes: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                        };
                        readonly tokenExpirationTime: {
                            readonly type: "number";
                        };
                        readonly authorizationRequestCustomParams: {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly type: "string";
                            };
                        };
                        readonly tokenRequestCustomParams: {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly type: "string";
                            };
                        };
                        readonly audience: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                        };
                    };
                    readonly required: readonly ["type", "clientId"];
                    readonly oneOf: readonly [{
                        readonly required: readonly ["configurationUrl"];
                    }, {
                        readonly required: readonly ["configuration"];
                    }];
                    readonly additionalProperties: false;
                }, {
                    readonly type: "object";
                    readonly properties: {
                        readonly type: {
                            readonly type: "string";
                            readonly const: AuthProviderType.SAML2;
                        };
                        readonly title: {
                            readonly type: "string";
                        };
                        readonly issuerId: {
                            readonly type: "string";
                        };
                        readonly entityId: {
                            readonly type: "string";
                        };
                        readonly ssoUrl: {
                            readonly type: "string";
                        };
                        readonly x509PublicCert: {
                            readonly type: "string";
                        };
                        readonly teamsAttributeName: {
                            readonly type: "string";
                            readonly default: "https://redocly.com/sso/teams";
                        };
                        readonly teamsAttributeMap: {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly type: "string";
                            };
                        };
                        readonly defaultTeams: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                        };
                    };
                    readonly additionalProperties: false;
                    readonly required: readonly ["type", "issuerId", "ssoUrl", "x509PublicCert"];
                }, {
                    readonly type: "object";
                    readonly properties: {
                        readonly type: {
                            readonly type: "string";
                            readonly const: AuthProviderType.BASIC;
                        };
                        readonly title: {
                            readonly type: "string";
                        };
                        readonly credentials: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly username: {
                                        readonly type: "string";
                                    };
                                    readonly password: {
                                        readonly type: "string";
                                    };
                                    readonly passwordHash: {
                                        readonly type: "string";
                                    };
                                    readonly teams: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly required: readonly ["username"];
                                readonly additionalProperties: false;
                            };
                        };
                    };
                    readonly required: readonly ["type", "credentials"];
                    readonly additionalProperties: false;
                }];
                readonly discriminator: {
                    readonly propertyName: "type";
                };
            };
        };
        readonly sso: {
            readonly oneOf: readonly [{
                readonly type: "array";
                readonly items: {
                    readonly type: "string";
                    readonly enum: readonly ["REDOCLY", "CORPORATE", "GUEST"];
                };
                readonly uniqueItems: true;
            }, {
                readonly type: "string";
                readonly enum: readonly ["REDOCLY", "CORPORATE", "GUEST"];
            }];
        };
        readonly residency: {
            readonly type: "string";
        };
        readonly developerOnboarding: {
            readonly type: "object";
            readonly required: readonly ["adapters"];
            readonly additionalProperties: false;
            readonly properties: {
                readonly adapters: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly oneOf: readonly [{
                            readonly type: "object";
                            readonly properties: {
                                readonly type: {
                                    readonly type: "string";
                                    readonly const: "APIGEE_X";
                                };
                                readonly apiUrl: {
                                    readonly type: "string";
                                };
                                readonly stage: {
                                    readonly type: "string";
                                    readonly default: "non-production";
                                };
                                readonly organizationName: {
                                    readonly type: "string";
                                };
                                readonly ignoreApiProducts: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                    };
                                };
                                readonly allowApiProductsOutsideCatalog: {
                                    readonly type: "boolean";
                                    readonly default: false;
                                };
                                readonly auth: {
                                    readonly type: "object";
                                    readonly oneOf: readonly [{
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly type: {
                                                readonly type: "string";
                                                readonly const: ApigeeDevOnboardingIntegrationAuthType.OAUTH2;
                                            };
                                            readonly tokenEndpoint: {
                                                readonly type: "string";
                                            };
                                            readonly clientId: {
                                                readonly type: "string";
                                            };
                                            readonly clientSecret: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["type", "tokenEndpoint", "clientId", "clientSecret"];
                                    }, {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly type: {
                                                readonly type: "string";
                                                readonly const: ApigeeDevOnboardingIntegrationAuthType.SERVICE_ACCOUNT;
                                            };
                                            readonly serviceAccountEmail: {
                                                readonly type: "string";
                                            };
                                            readonly serviceAccountPrivateKey: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["type", "serviceAccountEmail", "serviceAccountPrivateKey"];
                                    }];
                                    readonly discriminator: {
                                        readonly propertyName: "type";
                                    };
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["type", "organizationName", "auth"];
                        }, {
                            readonly properties: {
                                readonly type: {
                                    readonly type: "string";
                                    readonly const: "APIGEE_EDGE";
                                };
                                readonly apiUrl: {
                                    readonly type: "string";
                                };
                                readonly stage: {
                                    readonly type: "string";
                                    readonly default: "non-production";
                                };
                                readonly organizationName: {
                                    readonly type: "string";
                                };
                                readonly ignoreApiProducts: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                    };
                                };
                                readonly allowApiProductsOutsideCatalog: {
                                    readonly type: "boolean";
                                    readonly default: false;
                                };
                                readonly auth: {
                                    readonly type: "object";
                                    readonly oneOf: readonly [{
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly type: {
                                                readonly type: "string";
                                                readonly const: ApigeeDevOnboardingIntegrationAuthType.OAUTH2;
                                            };
                                            readonly tokenEndpoint: {
                                                readonly type: "string";
                                            };
                                            readonly clientId: {
                                                readonly type: "string";
                                            };
                                            readonly clientSecret: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["type", "tokenEndpoint", "clientId", "clientSecret"];
                                    }, {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly type: {
                                                readonly type: "string";
                                                readonly const: ApigeeDevOnboardingIntegrationAuthType.SERVICE_ACCOUNT;
                                            };
                                            readonly serviceAccountEmail: {
                                                readonly type: "string";
                                            };
                                            readonly serviceAccountPrivateKey: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["type", "serviceAccountEmail", "serviceAccountPrivateKey"];
                                    }];
                                    readonly discriminator: {
                                        readonly propertyName: "type";
                                    };
                                };
                            };
                            readonly type: "object";
                            readonly additionalProperties: false;
                            readonly required: readonly ["type", "organizationName", "auth"];
                        }, {
                            readonly type: "object";
                            readonly properties: {
                                readonly type: {
                                    readonly type: "string";
                                    readonly const: "GRAVITEE";
                                };
                                readonly apiBaseUrl: {
                                    readonly type: "string";
                                };
                                readonly env: {
                                    readonly type: "string";
                                };
                                readonly allowApiProductsOutsideCatalog: {
                                    readonly type: "boolean";
                                    readonly default: false;
                                };
                                readonly stage: {
                                    readonly type: "string";
                                    readonly default: "non-production";
                                };
                                readonly auth: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly static: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["type", "apiBaseUrl"];
                        }];
                        readonly discriminator: {
                            readonly propertyName: "type";
                        };
                    };
                };
            };
        };
        readonly removeAttribution: {
            readonly type: "boolean";
        };
        readonly i18n: {
            readonly type: "object";
            readonly properties: {
                readonly defaultLocale: {
                    readonly type: "string";
                };
                readonly locales: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                            };
                            readonly name: {
                                readonly type: "string";
                            };
                        };
                        readonly required: readonly ["code"];
                    };
                };
            };
            readonly additionalProperties: false;
            readonly required: readonly ["defaultLocale"];
        };
        readonly metadata: {
            readonly type: "object";
            readonly additionalProperties: true;
        };
        readonly ignore: {
            readonly type: "array";
            readonly items: {
                readonly type: "string";
            };
        };
        readonly theme: {
            readonly type: "object";
            readonly properties: {
                readonly imports: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly default: readonly [];
                };
                readonly logo: {
                    readonly type: "object";
                    readonly properties: {
                        readonly image: {
                            readonly type: "string";
                        };
                        readonly srcSet: {
                            readonly type: "string";
                        };
                        readonly altText: {
                            readonly type: "string";
                        };
                        readonly link: {
                            readonly type: "string";
                        };
                        readonly favicon: {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly navbar: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly items: {
                            readonly type: "array";
                            readonly items: {
                                readonly properties: {
                                    readonly items: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly page: {
                                                    readonly type: "string";
                                                };
                                                readonly directory: {
                                                    readonly type: "string";
                                                };
                                                readonly disconnect: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly group: {
                                                    readonly type: "string";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly href: {
                                                    readonly type: "string";
                                                };
                                                readonly external: {
                                                    readonly type: "boolean";
                                                };
                                                readonly labelTranslationKey: {
                                                    readonly type: "string";
                                                };
                                                readonly groupTranslationKey: {
                                                    readonly type: "string";
                                                };
                                                readonly icon: {
                                                    readonly oneOf: readonly [{
                                                        readonly type: "string";
                                                    }, {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly srcSet: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly required: readonly ["srcSet"];
                                                    }];
                                                };
                                                readonly separator: {
                                                    readonly type: "string";
                                                };
                                                readonly separatorLine: {
                                                    readonly type: "boolean";
                                                };
                                                readonly linePosition: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["top", "bottom"];
                                                    readonly default: "top";
                                                };
                                                readonly version: {
                                                    readonly type: "string";
                                                };
                                                readonly menuStyle: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["drilldown"];
                                                };
                                                readonly expanded: {
                                                    readonly type: "string";
                                                    readonly const: "always";
                                                };
                                                readonly selectFirstItemOnExpand: {
                                                    readonly type: "boolean";
                                                };
                                                readonly flatten: {
                                                    readonly type: "boolean";
                                                };
                                                readonly linkedSidebars: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "object";
                                                        readonly additionalProperties: true;
                                                    };
                                                };
                                            };
                                        };
                                    };
                                    readonly page: {
                                        readonly type: "string";
                                    };
                                    readonly directory: {
                                        readonly type: "string";
                                    };
                                    readonly disconnect: {
                                        readonly type: "boolean";
                                        readonly default: false;
                                    };
                                    readonly group: {
                                        readonly type: "string";
                                    };
                                    readonly label: {
                                        readonly type: "string";
                                    };
                                    readonly href: {
                                        readonly type: "string";
                                    };
                                    readonly external: {
                                        readonly type: "boolean";
                                    };
                                    readonly labelTranslationKey: {
                                        readonly type: "string";
                                    };
                                    readonly groupTranslationKey: {
                                        readonly type: "string";
                                    };
                                    readonly icon: {
                                        readonly oneOf: readonly [{
                                            readonly type: "string";
                                        }, {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly srcSet: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly required: readonly ["srcSet"];
                                        }];
                                    };
                                    readonly separator: {
                                        readonly type: "string";
                                    };
                                    readonly separatorLine: {
                                        readonly type: "boolean";
                                    };
                                    readonly linePosition: {
                                        readonly type: "string";
                                        readonly enum: readonly ["top", "bottom"];
                                        readonly default: "top";
                                    };
                                    readonly version: {
                                        readonly type: "string";
                                    };
                                    readonly menuStyle: {
                                        readonly type: "string";
                                        readonly enum: readonly ["drilldown"];
                                    };
                                    readonly expanded: {
                                        readonly type: "string";
                                        readonly const: "always";
                                    };
                                    readonly selectFirstItemOnExpand: {
                                        readonly type: "boolean";
                                    };
                                    readonly flatten: {
                                        readonly type: "boolean";
                                    };
                                    readonly linkedSidebars: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly type: "object";
                            };
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly products: {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "object";
                        readonly properties: {
                            readonly name: {
                                readonly type: "string";
                            };
                            readonly icon: {
                                readonly type: "string";
                            };
                            readonly folder: {
                                readonly type: "string";
                            };
                        };
                        readonly additionalProperties: false;
                        readonly required: readonly ["name", "folder"];
                    };
                };
                readonly footer: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly items: {
                            readonly type: "array";
                            readonly items: {
                                readonly properties: {
                                    readonly items: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly page: {
                                                    readonly type: "string";
                                                };
                                                readonly directory: {
                                                    readonly type: "string";
                                                };
                                                readonly disconnect: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly group: {
                                                    readonly type: "string";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly href: {
                                                    readonly type: "string";
                                                };
                                                readonly external: {
                                                    readonly type: "boolean";
                                                };
                                                readonly labelTranslationKey: {
                                                    readonly type: "string";
                                                };
                                                readonly groupTranslationKey: {
                                                    readonly type: "string";
                                                };
                                                readonly icon: {
                                                    readonly oneOf: readonly [{
                                                        readonly type: "string";
                                                    }, {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly srcSet: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly required: readonly ["srcSet"];
                                                    }];
                                                };
                                                readonly separator: {
                                                    readonly type: "string";
                                                };
                                                readonly separatorLine: {
                                                    readonly type: "boolean";
                                                };
                                                readonly linePosition: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["top", "bottom"];
                                                    readonly default: "top";
                                                };
                                                readonly version: {
                                                    readonly type: "string";
                                                };
                                                readonly menuStyle: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["drilldown"];
                                                };
                                                readonly expanded: {
                                                    readonly type: "string";
                                                    readonly const: "always";
                                                };
                                                readonly selectFirstItemOnExpand: {
                                                    readonly type: "boolean";
                                                };
                                                readonly flatten: {
                                                    readonly type: "boolean";
                                                };
                                                readonly linkedSidebars: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "object";
                                                        readonly additionalProperties: true;
                                                    };
                                                };
                                            };
                                        };
                                    };
                                    readonly page: {
                                        readonly type: "string";
                                    };
                                    readonly directory: {
                                        readonly type: "string";
                                    };
                                    readonly disconnect: {
                                        readonly type: "boolean";
                                        readonly default: false;
                                    };
                                    readonly group: {
                                        readonly type: "string";
                                    };
                                    readonly label: {
                                        readonly type: "string";
                                    };
                                    readonly href: {
                                        readonly type: "string";
                                    };
                                    readonly external: {
                                        readonly type: "boolean";
                                    };
                                    readonly labelTranslationKey: {
                                        readonly type: "string";
                                    };
                                    readonly groupTranslationKey: {
                                        readonly type: "string";
                                    };
                                    readonly icon: {
                                        readonly oneOf: readonly [{
                                            readonly type: "string";
                                        }, {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly srcSet: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly required: readonly ["srcSet"];
                                        }];
                                    };
                                    readonly separator: {
                                        readonly type: "string";
                                    };
                                    readonly separatorLine: {
                                        readonly type: "boolean";
                                    };
                                    readonly linePosition: {
                                        readonly type: "string";
                                        readonly enum: readonly ["top", "bottom"];
                                        readonly default: "top";
                                    };
                                    readonly version: {
                                        readonly type: "string";
                                    };
                                    readonly menuStyle: {
                                        readonly type: "string";
                                        readonly enum: readonly ["drilldown"];
                                    };
                                    readonly expanded: {
                                        readonly type: "string";
                                        readonly const: "always";
                                    };
                                    readonly selectFirstItemOnExpand: {
                                        readonly type: "boolean";
                                    };
                                    readonly flatten: {
                                        readonly type: "boolean";
                                    };
                                    readonly linkedSidebars: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly type: "object";
                            };
                        };
                        readonly copyrightText: {
                            readonly type: "string";
                        };
                        readonly logo: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                            };
                            readonly additionalProperties: false;
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly sidebar: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly separatorLine: {
                            readonly type: "boolean";
                        };
                        readonly linePosition: {
                            readonly type: "string";
                            readonly enum: readonly ["top", "bottom"];
                            readonly default: "bottom";
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly scripts: {
                    readonly type: "object";
                    readonly properties: {
                        readonly head: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly src: {
                                        readonly type: "string";
                                    };
                                    readonly async: {
                                        readonly type: "boolean";
                                    };
                                    readonly crossorigin: {
                                        readonly type: "string";
                                    };
                                    readonly defer: {
                                        readonly type: "boolean";
                                    };
                                    readonly fetchpriority: {
                                        readonly type: "string";
                                    };
                                    readonly integrity: {
                                        readonly type: "string";
                                    };
                                    readonly module: {
                                        readonly type: "boolean";
                                    };
                                    readonly nomodule: {
                                        readonly type: "boolean";
                                    };
                                    readonly nonce: {
                                        readonly type: "string";
                                    };
                                    readonly referrerpolicy: {
                                        readonly type: "string";
                                    };
                                    readonly type: {
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["src"];
                                readonly additionalProperties: true;
                            };
                        };
                        readonly body: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly src: {
                                        readonly type: "string";
                                    };
                                    readonly async: {
                                        readonly type: "boolean";
                                    };
                                    readonly crossorigin: {
                                        readonly type: "string";
                                    };
                                    readonly defer: {
                                        readonly type: "boolean";
                                    };
                                    readonly fetchpriority: {
                                        readonly type: "string";
                                    };
                                    readonly integrity: {
                                        readonly type: "string";
                                    };
                                    readonly module: {
                                        readonly type: "boolean";
                                    };
                                    readonly nomodule: {
                                        readonly type: "boolean";
                                    };
                                    readonly nonce: {
                                        readonly type: "string";
                                    };
                                    readonly referrerpolicy: {
                                        readonly type: "string";
                                    };
                                    readonly type: {
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["src"];
                                readonly additionalProperties: true;
                            };
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly links: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly href: {
                                readonly type: "string";
                            };
                            readonly as: {
                                readonly type: "string";
                            };
                            readonly crossorigin: {
                                readonly type: "string";
                            };
                            readonly fetchpriority: {
                                readonly type: "string";
                            };
                            readonly hreflang: {
                                readonly type: "string";
                            };
                            readonly imagesizes: {
                                readonly type: "string";
                            };
                            readonly imagesrcset: {
                                readonly type: "string";
                            };
                            readonly integrity: {
                                readonly type: "string";
                            };
                            readonly media: {
                                readonly type: "string";
                            };
                            readonly prefetch: {
                                readonly type: "string";
                            };
                            readonly referrerpolicy: {
                                readonly type: "string";
                            };
                            readonly rel: {
                                readonly type: "string";
                            };
                            readonly sizes: {
                                readonly type: "string";
                            };
                            readonly title: {
                                readonly type: "string";
                            };
                            readonly type: {
                                readonly type: "string";
                            };
                        };
                        readonly required: readonly ["href"];
                        readonly additionalProperties: true;
                    };
                };
                readonly feedback: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                            readonly default: false;
                        };
                        readonly type: {
                            readonly type: "string";
                            readonly enum: readonly ["rating", "sentiment", "comment", "reasons", "mood", "scale"];
                            readonly default: "sentiment";
                        };
                        readonly settings: {
                            readonly hide: {
                                readonly type: "boolean";
                            };
                            readonly type: "object";
                            readonly properties: {
                                readonly label: {
                                    readonly type: "string";
                                };
                                readonly submitText: {
                                    readonly type: "string";
                                };
                                readonly buttonText: {
                                    readonly type: "string";
                                };
                                readonly component: {
                                    readonly type: "string";
                                    readonly enum: readonly ["radio", "checkbox"];
                                    readonly default: "checkbox";
                                };
                                readonly items: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                    };
                                    readonly minItems: 1;
                                };
                                readonly leftScaleLabel: {
                                    readonly type: "string";
                                };
                                readonly rightScaleLabel: {
                                    readonly type: "string";
                                };
                                readonly reasons: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly hide: {
                                            readonly type: "boolean";
                                            readonly default: false;
                                        };
                                        readonly component: {
                                            readonly type: "string";
                                            readonly enum: readonly ["radio", "checkbox"];
                                            readonly default: "checkbox";
                                        };
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly items: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                                readonly comment: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly hide: {
                                            readonly type: "boolean";
                                            readonly default: false;
                                        };
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly likeLabel: {
                                            readonly type: "string";
                                        };
                                        readonly dislikeLabel: {
                                            readonly type: "string";
                                        };
                                        readonly satisfiedLabel: {
                                            readonly type: "string";
                                        };
                                        readonly neutralLabel: {
                                            readonly type: "string";
                                        };
                                        readonly dissatisfiedLabel: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                            };
                            readonly additionalProperties: false;
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {};
                };
                readonly search: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly placement: {
                            readonly type: "string";
                            readonly default: "navbar";
                        };
                        readonly shortcuts: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                            readonly default: readonly ["/"];
                        };
                        readonly suggestedPages: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly page: {
                                        readonly type: "string";
                                    };
                                    readonly label: {
                                        readonly type: "string";
                                    };
                                    readonly labelTranslationKey: {
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["page"];
                            };
                        };
                        readonly fuzzy: {
                            readonly type: "boolean";
                            readonly default: false;
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {};
                };
                readonly colorMode: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly ignoreDetection: {
                            readonly type: "boolean";
                        };
                        readonly modes: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                            readonly default: readonly ["light", "dark"];
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {};
                };
                readonly navigation: {
                    readonly type: "object";
                    readonly properties: {
                        readonly nextButton: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                                readonly text: {
                                    readonly type: "string";
                                    readonly default: "Next to {{label}}";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {};
                        };
                        readonly previousButton: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                                readonly text: {
                                    readonly type: "string";
                                    readonly default: "Back to {{label}}";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {};
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {};
                };
                readonly codeSnippet: {
                    readonly type: "object";
                    readonly properties: {
                        readonly elementFormat: {
                            readonly type: "string";
                            readonly default: "icon";
                        };
                        readonly copy: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {
                                readonly hide: false;
                            };
                        };
                        readonly report: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                                readonly tooltipText: {
                                    readonly type: "string";
                                };
                                readonly buttonText: {
                                    readonly type: "string";
                                };
                                readonly label: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {
                                readonly hide: false;
                            };
                        };
                        readonly expand: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {
                                readonly hide: false;
                            };
                        };
                        readonly collapse: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {
                                readonly hide: false;
                            };
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {};
                };
                readonly markdown: {
                    readonly type: "object";
                    readonly properties: {
                        readonly frontMatterKeysToResolve: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                            readonly default: readonly ["image", "links"];
                        };
                        readonly partialsFolders: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                            readonly default: readonly ["_partials"];
                        };
                        readonly lastUpdatedBlock: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                                readonly format: {
                                    readonly type: "string";
                                    readonly enum: readonly ["timeago", "iso", "long", "short"];
                                    readonly default: "timeago";
                                };
                                readonly locale: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {};
                        };
                        readonly toc: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                                readonly header: {
                                    readonly type: "string";
                                    readonly default: "On this page";
                                };
                                readonly depth: {
                                    readonly type: "integer";
                                    readonly default: 3;
                                    readonly minimum: 1;
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {};
                        };
                        readonly editPage: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                                readonly baseUrl: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {};
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {};
                };
                readonly openapi: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly graphql: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly analytics: {
                    readonly type: "object";
                    readonly properties: {
                        readonly adobe: {
                            readonly type: "object";
                            readonly properties: {
                                readonly includeInDevelopment: {
                                    readonly type: "boolean";
                                };
                                readonly scriptUrl: {
                                    readonly type: "string";
                                };
                                readonly pageViewEventName: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["scriptUrl"];
                        };
                        readonly amplitude: {
                            readonly type: "object";
                            readonly properties: {
                                readonly includeInDevelopment: {
                                    readonly type: "boolean";
                                };
                                readonly apiKey: {
                                    readonly type: "string";
                                };
                                readonly head: {
                                    readonly type: "boolean";
                                };
                                readonly respectDNT: {
                                    readonly type: "boolean";
                                };
                                readonly exclude: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                    };
                                };
                                readonly outboundClickEventName: {
                                    readonly type: "string";
                                };
                                readonly pageViewEventName: {
                                    readonly type: "string";
                                };
                                readonly amplitudeConfig: {
                                    readonly type: "object";
                                    readonly additionalProperties: true;
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["apiKey"];
                        };
                        readonly fullstory: {
                            readonly type: "object";
                            readonly properties: {
                                readonly includeInDevelopment: {
                                    readonly type: "boolean";
                                };
                                readonly orgId: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["orgId"];
                        };
                        readonly heap: {
                            readonly type: "object";
                            readonly properties: {
                                readonly includeInDevelopment: {
                                    readonly type: "boolean";
                                };
                                readonly appId: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["appId"];
                        };
                        readonly rudderstack: {
                            readonly type: "object";
                            readonly properties: {
                                readonly includeInDevelopment: {
                                    readonly type: "boolean";
                                };
                                readonly writeKey: {
                                    readonly type: "string";
                                    readonly minLength: 10;
                                };
                                readonly trackPage: {
                                    readonly type: "boolean";
                                };
                                readonly dataPlaneUrl: {
                                    readonly type: "string";
                                };
                                readonly controlPlaneUrl: {
                                    readonly type: "string";
                                };
                                readonly sdkUrl: {
                                    readonly type: "string";
                                };
                                readonly loadOptions: {
                                    readonly type: "object";
                                    readonly additionalProperties: true;
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["writeKey"];
                        };
                        readonly segment: {
                            readonly type: "object";
                            readonly properties: {
                                readonly includeInDevelopment: {
                                    readonly type: "boolean";
                                };
                                readonly writeKey: {
                                    readonly type: "string";
                                    readonly minLength: 10;
                                };
                                readonly trackPage: {
                                    readonly type: "boolean";
                                };
                                readonly includeTitleInPageCall: {
                                    readonly type: "boolean";
                                };
                                readonly host: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["writeKey"];
                        };
                        readonly gtm: {
                            readonly type: "object";
                            readonly properties: {
                                readonly includeInDevelopment: {
                                    readonly type: "boolean";
                                };
                                readonly trackingId: {
                                    readonly type: "string";
                                };
                                readonly gtmAuth: {
                                    readonly type: "string";
                                };
                                readonly gtmPreview: {
                                    readonly type: "string";
                                };
                                readonly defaultDataLayer: {};
                                readonly dataLayerName: {
                                    readonly type: "string";
                                };
                                readonly enableWebVitalsTracking: {
                                    readonly type: "boolean";
                                };
                                readonly selfHostedOrigin: {
                                    readonly type: "string";
                                };
                                readonly pageViewEventName: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["trackingId"];
                        };
                        readonly ga: {
                            readonly type: "object";
                            readonly properties: {
                                readonly includeInDevelopment: {
                                    readonly type: "boolean";
                                };
                                readonly trackingId: {
                                    readonly type: "string";
                                };
                                readonly conversionId: {
                                    readonly type: "string";
                                };
                                readonly floodlightId: {
                                    readonly type: "string";
                                };
                                readonly head: {
                                    readonly type: "boolean";
                                };
                                readonly respectDNT: {
                                    readonly type: "boolean";
                                };
                                readonly exclude: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                    };
                                };
                                readonly optimizeId: {
                                    readonly type: "string";
                                };
                                readonly anonymizeIp: {
                                    readonly type: "boolean";
                                };
                                readonly cookieExpires: {
                                    readonly type: "number";
                                };
                                readonly trackers: {
                                    readonly type: "object";
                                    readonly additionalProperties: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly includeInDevelopment: {
                                                readonly type: "boolean";
                                            };
                                            readonly trackingId: {
                                                readonly type: "string";
                                            };
                                            readonly conversionId: {
                                                readonly type: "string";
                                            };
                                            readonly floodlightId: {
                                                readonly type: "string";
                                            };
                                            readonly optimizeId: {
                                                readonly type: "string";
                                            };
                                            readonly exclude: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["trackingId"];
                                    };
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["trackingId"];
                        };
                    };
                };
                readonly userProfile: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly loginLabel: {
                            readonly type: "string";
                            readonly default: "Login";
                        };
                        readonly logoutLabel: {
                            readonly type: "string";
                            readonly default: "Logout";
                        };
                        readonly menu: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly label: {
                                        readonly type: "string";
                                    };
                                    readonly external: {
                                        readonly type: "boolean";
                                    };
                                    readonly link: {
                                        readonly type: "string";
                                    };
                                    readonly separatorLine: {
                                        readonly type: "boolean";
                                    };
                                };
                                readonly additionalProperties: true;
                            };
                            readonly default: readonly [];
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {};
                };
                readonly versionPicker: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly showForUnversioned: {
                            readonly type: "boolean";
                        };
                    };
                };
                readonly breadcrumbs: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly prefixItems: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly label: {
                                        readonly type: "string";
                                    };
                                    readonly labelTranslationKey: {
                                        readonly type: "string";
                                    };
                                    readonly page: {
                                        readonly type: "string";
                                    };
                                };
                                readonly additionalProperties: false;
                                readonly default: {};
                            };
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {};
                };
                readonly catalog: {
                    readonly type: "object";
                    readonly patternProperties: {
                        readonly '.*': {
                            readonly type: "object";
                            readonly additionalProperties: true;
                            readonly required: readonly ["slug", "items"];
                            readonly properties: {
                                readonly slug: {
                                    readonly type: "string";
                                };
                                readonly filters: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["title", "property"];
                                        readonly properties: {
                                            readonly type: {
                                                readonly type: "string";
                                                readonly enum: readonly ["select", "checkboxes", "date-range"];
                                            };
                                            readonly title: {
                                                readonly type: "string";
                                            };
                                            readonly titleTranslationKey: {
                                                readonly type: "string";
                                            };
                                            readonly property: {
                                                readonly type: "string";
                                            };
                                            readonly parentFilter: {
                                                readonly type: "string";
                                            };
                                            readonly valuesMapping: {
                                                readonly type: "object";
                                                readonly additionalProperties: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly missingCategoryName: {
                                                readonly type: "string";
                                            };
                                            readonly missingCategoryNameTranslationKey: {
                                                readonly type: "string";
                                            };
                                            readonly options: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                    };
                                };
                                readonly groupByFirstFilter: {
                                    readonly type: "boolean";
                                };
                                readonly filterValuesCasing: {
                                    readonly type: "string";
                                    readonly enum: readonly ["sentence", "original", "lowercase", "uppercase"];
                                };
                                readonly items: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly properties: {
                                            readonly items: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly page: {
                                                            readonly type: "string";
                                                        };
                                                        readonly directory: {
                                                            readonly type: "string";
                                                        };
                                                        readonly disconnect: {
                                                            readonly type: "boolean";
                                                            readonly default: false;
                                                        };
                                                        readonly group: {
                                                            readonly type: "string";
                                                        };
                                                        readonly label: {
                                                            readonly type: "string";
                                                        };
                                                        readonly href: {
                                                            readonly type: "string";
                                                        };
                                                        readonly external: {
                                                            readonly type: "boolean";
                                                        };
                                                        readonly labelTranslationKey: {
                                                            readonly type: "string";
                                                        };
                                                        readonly groupTranslationKey: {
                                                            readonly type: "string";
                                                        };
                                                        readonly icon: {
                                                            readonly oneOf: readonly [{
                                                                readonly type: "string";
                                                            }, {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly srcSet: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                                readonly required: readonly ["srcSet"];
                                                            }];
                                                        };
                                                        readonly separator: {
                                                            readonly type: "string";
                                                        };
                                                        readonly separatorLine: {
                                                            readonly type: "boolean";
                                                        };
                                                        readonly linePosition: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["top", "bottom"];
                                                            readonly default: "top";
                                                        };
                                                        readonly version: {
                                                            readonly type: "string";
                                                        };
                                                        readonly menuStyle: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["drilldown"];
                                                        };
                                                        readonly expanded: {
                                                            readonly type: "string";
                                                            readonly const: "always";
                                                        };
                                                        readonly selectFirstItemOnExpand: {
                                                            readonly type: "boolean";
                                                        };
                                                        readonly flatten: {
                                                            readonly type: "boolean";
                                                        };
                                                        readonly linkedSidebars: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly items: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "object";
                                                                readonly additionalProperties: true;
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                            readonly page: {
                                                readonly type: "string";
                                            };
                                            readonly directory: {
                                                readonly type: "string";
                                            };
                                            readonly disconnect: {
                                                readonly type: "boolean";
                                                readonly default: false;
                                            };
                                            readonly group: {
                                                readonly type: "string";
                                            };
                                            readonly label: {
                                                readonly type: "string";
                                            };
                                            readonly href: {
                                                readonly type: "string";
                                            };
                                            readonly external: {
                                                readonly type: "boolean";
                                            };
                                            readonly labelTranslationKey: {
                                                readonly type: "string";
                                            };
                                            readonly groupTranslationKey: {
                                                readonly type: "string";
                                            };
                                            readonly icon: {
                                                readonly oneOf: readonly [{
                                                    readonly type: "string";
                                                }, {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly srcSet: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly required: readonly ["srcSet"];
                                                }];
                                            };
                                            readonly separator: {
                                                readonly type: "string";
                                            };
                                            readonly separatorLine: {
                                                readonly type: "boolean";
                                            };
                                            readonly linePosition: {
                                                readonly type: "string";
                                                readonly enum: readonly ["top", "bottom"];
                                                readonly default: "top";
                                            };
                                            readonly version: {
                                                readonly type: "string";
                                            };
                                            readonly menuStyle: {
                                                readonly type: "string";
                                                readonly enum: readonly ["drilldown"];
                                            };
                                            readonly expanded: {
                                                readonly type: "string";
                                                readonly const: "always";
                                            };
                                            readonly selectFirstItemOnExpand: {
                                                readonly type: "boolean";
                                            };
                                            readonly flatten: {
                                                readonly type: "boolean";
                                            };
                                            readonly linkedSidebars: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly type: "object";
                                    };
                                };
                                readonly requiredPermission: {
                                    readonly type: "string";
                                };
                                readonly separateVersions: {
                                    readonly type: "boolean";
                                };
                                readonly title: {
                                    readonly type: "string";
                                };
                                readonly titleTranslationKey: {
                                    readonly type: "string";
                                };
                                readonly description: {
                                    readonly type: "string";
                                };
                                readonly descriptionTranslationKey: {
                                    readonly type: "string";
                                };
                            };
                        };
                    };
                };
                readonly scorecard: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                    readonly required: readonly [];
                    readonly properties: {
                        readonly ignoreNonCompliant: {
                            readonly type: "boolean";
                            readonly default: false;
                        };
                        readonly teamMetadataProperty: {
                            readonly type: "object";
                            readonly properties: {
                                readonly property: {
                                    readonly type: "string";
                                };
                                readonly label: {
                                    readonly type: "string";
                                };
                                readonly default: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly levels: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly required: readonly ["name"];
                                readonly properties: {
                                    readonly name: {
                                        readonly type: "string";
                                    };
                                    readonly color: {
                                        readonly type: "string";
                                    };
                                    readonly extends: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly rules: {
                                        readonly type: "object";
                                        readonly additionalProperties: {
                                            readonly oneOf: readonly [{
                                                readonly type: "string";
                                            }, {
                                                readonly type: "object";
                                            }];
                                        };
                                    };
                                };
                                readonly additionalProperties: false;
                            };
                        };
                        readonly targets: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly required: readonly ["where"];
                                readonly properties: {
                                    readonly minimumLevel: {
                                        readonly type: "string";
                                    };
                                    readonly where: {
                                        readonly type: "object";
                                        readonly required: readonly ["metadata"];
                                        readonly properties: {
                                            readonly metadata: {
                                                readonly type: "object";
                                                readonly additionalProperties: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly additionalProperties: false;
                                    };
                                };
                                readonly additionalProperties: false;
                            };
                        };
                    };
                };
            };
            readonly additionalProperties: true;
            readonly default: {};
        };
        readonly reunite: {
            readonly type: "object";
            readonly properties: {
                readonly ignoreLinkChecker: {
                    readonly type: "boolean";
                };
            };
            readonly additionalProperties: false;
        };
    };
    readonly default: {
        readonly redirects: {};
    };
    readonly additionalProperties: true;
};
export declare const rootRedoclyConfigSchema: {
    readonly properties: {
        readonly env: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly additionalProperties: false;
                readonly type: "object";
                readonly properties: {
                    readonly licenseKey: {
                        readonly type: "string";
                    };
                    readonly redirects: {
                        readonly type: "object";
                        readonly additionalProperties: {
                            readonly type: "object";
                            readonly properties: {
                                readonly to: {
                                    readonly type: "string";
                                };
                                readonly type: {
                                    readonly type: "number";
                                    readonly default: 301;
                                };
                            };
                            readonly additionalProperties: false;
                        };
                        readonly default: {};
                    };
                    readonly seo: {
                        readonly type: "object";
                        readonly properties: {
                            readonly title: {
                                readonly type: "string";
                            };
                            readonly description: {
                                readonly type: "string";
                            };
                            readonly siteUrl: {
                                readonly type: "string";
                            };
                            readonly image: {
                                readonly type: "string";
                            };
                            readonly keywords: {
                                readonly oneOf: readonly [{
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                    };
                                }, {
                                    readonly type: "string";
                                }];
                            };
                            readonly lang: {
                                readonly type: "string";
                            };
                            readonly jsonLd: {
                                readonly type: "object";
                            };
                            readonly meta: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly name: {
                                            readonly type: "string";
                                        };
                                        readonly content: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["name", "content"];
                                    readonly additionalProperties: false;
                                };
                            };
                        };
                        readonly additionalProperties: false;
                    };
                    readonly rbac: {
                        readonly type: "object";
                        readonly properties: {
                            readonly teamNamePatterns: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "string";
                                };
                            };
                            readonly teamFolders: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "string";
                                };
                            };
                            readonly teamFoldersBaseRoles: {
                                readonly type: "object";
                                readonly additionalProperties: {
                                    readonly type: "string";
                                };
                            };
                            readonly cms: {
                                readonly type: "object";
                                readonly additionalProperties: {
                                    readonly type: "string";
                                };
                            };
                            readonly reunite: {
                                readonly type: "object";
                                readonly additionalProperties: {
                                    readonly type: "string";
                                };
                            };
                            readonly content: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly '**': {
                                        readonly type: "object";
                                        readonly additionalProperties: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly additionalProperties: {
                                    readonly type: "object";
                                    readonly additionalProperties: {
                                        readonly type: "string";
                                    };
                                };
                            };
                        };
                        readonly additionalProperties: {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly type: "string";
                            };
                        };
                    };
                    readonly responseHeaders: {
                        readonly type: "object";
                        readonly additionalProperties: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly name: {
                                        readonly type: "string";
                                    };
                                    readonly value: {
                                        readonly type: "string";
                                    };
                                };
                                readonly additionalProperties: false;
                                readonly required: readonly ["name", "value"];
                            };
                        };
                    };
                    readonly mockServer: {
                        readonly type: "object";
                        readonly properties: {
                            readonly off: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly position: {
                                readonly type: "string";
                                readonly enum: readonly ["first", "last", "replace", "off"];
                                readonly default: "first";
                            };
                            readonly strictExamples: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly errorIfForcedExampleNotFound: {
                                readonly type: "boolean";
                                readonly default: false;
                            };
                            readonly description: {
                                readonly type: "string";
                            };
                        };
                    };
                    readonly apis: {
                        readonly type: "object";
                        readonly additionalProperties: {
                            readonly type: "object";
                            readonly properties: {
                                readonly root: {
                                    readonly type: "string";
                                };
                                readonly output: {
                                    readonly type: "string";
                                    readonly pattern: "(.ya?ml|.json)$";
                                };
                                readonly rbac: {
                                    readonly type: "object";
                                    readonly additionalProperties: true;
                                };
                                readonly theme: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly openapi: {
                                            readonly type: "object";
                                            readonly additionalProperties: true;
                                        };
                                        readonly graphql: {
                                            readonly type: "object";
                                            readonly additionalProperties: true;
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                                readonly title: {
                                    readonly type: "string";
                                };
                                readonly metadata: {
                                    readonly type: "object";
                                    readonly additionalProperties: true;
                                };
                                readonly rules: {
                                    readonly type: "object";
                                    readonly additionalProperties: true;
                                };
                                readonly decorators: {
                                    readonly type: "object";
                                    readonly additionalProperties: true;
                                };
                                readonly preprocessors: {
                                    readonly type: "object";
                                    readonly additionalProperties: true;
                                };
                            };
                            readonly required: readonly ["root"];
                        };
                    };
                    readonly ssoOnPrem: {
                        readonly type: "object";
                        readonly additionalProperties: {
                            readonly oneOf: readonly [{
                                readonly type: "object";
                                readonly properties: {
                                    readonly type: {
                                        readonly type: "string";
                                        readonly const: AuthProviderType.OIDC;
                                    };
                                    readonly title: {
                                        readonly type: "string";
                                    };
                                    readonly pkce: {
                                        readonly type: "boolean";
                                        readonly default: false;
                                    };
                                    readonly configurationUrl: {
                                        readonly type: "string";
                                        readonly minLength: 1;
                                    };
                                    readonly configuration: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly end_session_endpoint: {
                                                readonly type: "string";
                                            };
                                            readonly token_endpoint: {
                                                readonly type: "string";
                                            };
                                            readonly authorization_endpoint: {
                                                readonly type: "string";
                                            };
                                            readonly jwks_uri: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly required: readonly ["token_endpoint", "authorization_endpoint"];
                                        readonly additionalProperties: true;
                                    };
                                    readonly clientId: {
                                        readonly type: "string";
                                        readonly minLength: 1;
                                    };
                                    readonly clientSecret: {
                                        readonly type: "string";
                                        readonly minLength: 0;
                                    };
                                    readonly teamsClaimName: {
                                        readonly type: "string";
                                    };
                                    readonly teamsClaimMap: {
                                        readonly type: "object";
                                        readonly additionalProperties: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly defaultTeams: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly scopes: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly tokenExpirationTime: {
                                        readonly type: "number";
                                    };
                                    readonly authorizationRequestCustomParams: {
                                        readonly type: "object";
                                        readonly additionalProperties: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly tokenRequestCustomParams: {
                                        readonly type: "object";
                                        readonly additionalProperties: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly audience: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly required: readonly ["type", "clientId"];
                                readonly oneOf: readonly [{
                                    readonly required: readonly ["configurationUrl"];
                                }, {
                                    readonly required: readonly ["configuration"];
                                }];
                                readonly additionalProperties: false;
                            }, {
                                readonly type: "object";
                                readonly properties: {
                                    readonly type: {
                                        readonly type: "string";
                                        readonly const: AuthProviderType.SAML2;
                                    };
                                    readonly title: {
                                        readonly type: "string";
                                    };
                                    readonly issuerId: {
                                        readonly type: "string";
                                    };
                                    readonly entityId: {
                                        readonly type: "string";
                                    };
                                    readonly ssoUrl: {
                                        readonly type: "string";
                                    };
                                    readonly x509PublicCert: {
                                        readonly type: "string";
                                    };
                                    readonly teamsAttributeName: {
                                        readonly type: "string";
                                        readonly default: "https://redocly.com/sso/teams";
                                    };
                                    readonly teamsAttributeMap: {
                                        readonly type: "object";
                                        readonly additionalProperties: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly defaultTeams: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly additionalProperties: false;
                                readonly required: readonly ["type", "issuerId", "ssoUrl", "x509PublicCert"];
                            }, {
                                readonly type: "object";
                                readonly properties: {
                                    readonly type: {
                                        readonly type: "string";
                                        readonly const: AuthProviderType.BASIC;
                                    };
                                    readonly title: {
                                        readonly type: "string";
                                    };
                                    readonly credentials: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly username: {
                                                    readonly type: "string";
                                                };
                                                readonly password: {
                                                    readonly type: "string";
                                                };
                                                readonly passwordHash: {
                                                    readonly type: "string";
                                                };
                                                readonly teams: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly required: readonly ["username"];
                                            readonly additionalProperties: false;
                                        };
                                    };
                                };
                                readonly required: readonly ["type", "credentials"];
                                readonly additionalProperties: false;
                            }];
                            readonly discriminator: {
                                readonly propertyName: "type";
                            };
                        };
                    };
                    readonly sso: {
                        readonly oneOf: readonly [{
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                                readonly enum: readonly ["REDOCLY", "CORPORATE", "GUEST"];
                            };
                            readonly uniqueItems: true;
                        }, {
                            readonly type: "string";
                            readonly enum: readonly ["REDOCLY", "CORPORATE", "GUEST"];
                        }];
                    };
                    readonly residency: {
                        readonly type: "string";
                    };
                    readonly developerOnboarding: {
                        readonly type: "object";
                        readonly required: readonly ["adapters"];
                        readonly additionalProperties: false;
                        readonly properties: {
                            readonly adapters: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly oneOf: readonly [{
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly type: {
                                                readonly type: "string";
                                                readonly const: "APIGEE_X";
                                            };
                                            readonly apiUrl: {
                                                readonly type: "string";
                                            };
                                            readonly stage: {
                                                readonly type: "string";
                                                readonly default: "non-production";
                                            };
                                            readonly organizationName: {
                                                readonly type: "string";
                                            };
                                            readonly ignoreApiProducts: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly allowApiProductsOutsideCatalog: {
                                                readonly type: "boolean";
                                                readonly default: false;
                                            };
                                            readonly auth: {
                                                readonly type: "object";
                                                readonly oneOf: readonly [{
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly type: {
                                                            readonly type: "string";
                                                            readonly const: ApigeeDevOnboardingIntegrationAuthType.OAUTH2;
                                                        };
                                                        readonly tokenEndpoint: {
                                                            readonly type: "string";
                                                        };
                                                        readonly clientId: {
                                                            readonly type: "string";
                                                        };
                                                        readonly clientSecret: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly additionalProperties: false;
                                                    readonly required: readonly ["type", "tokenEndpoint", "clientId", "clientSecret"];
                                                }, {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly type: {
                                                            readonly type: "string";
                                                            readonly const: ApigeeDevOnboardingIntegrationAuthType.SERVICE_ACCOUNT;
                                                        };
                                                        readonly serviceAccountEmail: {
                                                            readonly type: "string";
                                                        };
                                                        readonly serviceAccountPrivateKey: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly additionalProperties: false;
                                                    readonly required: readonly ["type", "serviceAccountEmail", "serviceAccountPrivateKey"];
                                                }];
                                                readonly discriminator: {
                                                    readonly propertyName: "type";
                                                };
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["type", "organizationName", "auth"];
                                    }, {
                                        readonly properties: {
                                            readonly type: {
                                                readonly type: "string";
                                                readonly const: "APIGEE_EDGE";
                                            };
                                            readonly apiUrl: {
                                                readonly type: "string";
                                            };
                                            readonly stage: {
                                                readonly type: "string";
                                                readonly default: "non-production";
                                            };
                                            readonly organizationName: {
                                                readonly type: "string";
                                            };
                                            readonly ignoreApiProducts: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly allowApiProductsOutsideCatalog: {
                                                readonly type: "boolean";
                                                readonly default: false;
                                            };
                                            readonly auth: {
                                                readonly type: "object";
                                                readonly oneOf: readonly [{
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly type: {
                                                            readonly type: "string";
                                                            readonly const: ApigeeDevOnboardingIntegrationAuthType.OAUTH2;
                                                        };
                                                        readonly tokenEndpoint: {
                                                            readonly type: "string";
                                                        };
                                                        readonly clientId: {
                                                            readonly type: "string";
                                                        };
                                                        readonly clientSecret: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly additionalProperties: false;
                                                    readonly required: readonly ["type", "tokenEndpoint", "clientId", "clientSecret"];
                                                }, {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly type: {
                                                            readonly type: "string";
                                                            readonly const: ApigeeDevOnboardingIntegrationAuthType.SERVICE_ACCOUNT;
                                                        };
                                                        readonly serviceAccountEmail: {
                                                            readonly type: "string";
                                                        };
                                                        readonly serviceAccountPrivateKey: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly additionalProperties: false;
                                                    readonly required: readonly ["type", "serviceAccountEmail", "serviceAccountPrivateKey"];
                                                }];
                                                readonly discriminator: {
                                                    readonly propertyName: "type";
                                                };
                                            };
                                        };
                                        readonly type: "object";
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["type", "organizationName", "auth"];
                                    }, {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly type: {
                                                readonly type: "string";
                                                readonly const: "GRAVITEE";
                                            };
                                            readonly apiBaseUrl: {
                                                readonly type: "string";
                                            };
                                            readonly env: {
                                                readonly type: "string";
                                            };
                                            readonly allowApiProductsOutsideCatalog: {
                                                readonly type: "boolean";
                                                readonly default: false;
                                            };
                                            readonly stage: {
                                                readonly type: "string";
                                                readonly default: "non-production";
                                            };
                                            readonly auth: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly static: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["type", "apiBaseUrl"];
                                    }];
                                    readonly discriminator: {
                                        readonly propertyName: "type";
                                    };
                                };
                            };
                        };
                    };
                    readonly removeAttribution: {
                        readonly type: "boolean";
                    };
                    readonly i18n: {
                        readonly type: "object";
                        readonly properties: {
                            readonly defaultLocale: {
                                readonly type: "string";
                            };
                            readonly locales: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly code: {
                                            readonly type: "string";
                                        };
                                        readonly name: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["code"];
                                };
                            };
                        };
                        readonly additionalProperties: false;
                        readonly required: readonly ["defaultLocale"];
                    };
                    readonly metadata: {
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                    readonly ignore: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "string";
                        };
                    };
                    readonly theme: {
                        readonly type: "object";
                        readonly properties: {
                            readonly imports: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "string";
                                };
                                readonly default: readonly [];
                            };
                            readonly logo: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly image: {
                                        readonly type: "string";
                                    };
                                    readonly srcSet: {
                                        readonly type: "string";
                                    };
                                    readonly altText: {
                                        readonly type: "string";
                                    };
                                    readonly link: {
                                        readonly type: "string";
                                    };
                                    readonly favicon: {
                                        readonly type: "string";
                                    };
                                };
                                readonly additionalProperties: false;
                            };
                            readonly navbar: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly hide: {
                                        readonly type: "boolean";
                                    };
                                    readonly items: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly properties: {
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly page: {
                                                                readonly type: "string";
                                                            };
                                                            readonly directory: {
                                                                readonly type: "string";
                                                            };
                                                            readonly disconnect: {
                                                                readonly type: "boolean";
                                                                readonly default: false;
                                                            };
                                                            readonly group: {
                                                                readonly type: "string";
                                                            };
                                                            readonly label: {
                                                                readonly type: "string";
                                                            };
                                                            readonly href: {
                                                                readonly type: "string";
                                                            };
                                                            readonly external: {
                                                                readonly type: "boolean";
                                                            };
                                                            readonly labelTranslationKey: {
                                                                readonly type: "string";
                                                            };
                                                            readonly groupTranslationKey: {
                                                                readonly type: "string";
                                                            };
                                                            readonly icon: {
                                                                readonly oneOf: readonly [{
                                                                    readonly type: "string";
                                                                }, {
                                                                    readonly type: "object";
                                                                    readonly properties: {
                                                                        readonly srcSet: {
                                                                            readonly type: "string";
                                                                        };
                                                                    };
                                                                    readonly required: readonly ["srcSet"];
                                                                }];
                                                            };
                                                            readonly separator: {
                                                                readonly type: "string";
                                                            };
                                                            readonly separatorLine: {
                                                                readonly type: "boolean";
                                                            };
                                                            readonly linePosition: {
                                                                readonly type: "string";
                                                                readonly enum: readonly ["top", "bottom"];
                                                                readonly default: "top";
                                                            };
                                                            readonly version: {
                                                                readonly type: "string";
                                                            };
                                                            readonly menuStyle: {
                                                                readonly type: "string";
                                                                readonly enum: readonly ["drilldown"];
                                                            };
                                                            readonly expanded: {
                                                                readonly type: "string";
                                                                readonly const: "always";
                                                            };
                                                            readonly selectFirstItemOnExpand: {
                                                                readonly type: "boolean";
                                                            };
                                                            readonly flatten: {
                                                                readonly type: "boolean";
                                                            };
                                                            readonly linkedSidebars: {
                                                                readonly type: "array";
                                                                readonly items: {
                                                                    readonly type: "string";
                                                                };
                                                            };
                                                            readonly items: {
                                                                readonly type: "array";
                                                                readonly items: {
                                                                    readonly type: "object";
                                                                    readonly additionalProperties: true;
                                                                };
                                                            };
                                                        };
                                                    };
                                                };
                                                readonly page: {
                                                    readonly type: "string";
                                                };
                                                readonly directory: {
                                                    readonly type: "string";
                                                };
                                                readonly disconnect: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly group: {
                                                    readonly type: "string";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly href: {
                                                    readonly type: "string";
                                                };
                                                readonly external: {
                                                    readonly type: "boolean";
                                                };
                                                readonly labelTranslationKey: {
                                                    readonly type: "string";
                                                };
                                                readonly groupTranslationKey: {
                                                    readonly type: "string";
                                                };
                                                readonly icon: {
                                                    readonly oneOf: readonly [{
                                                        readonly type: "string";
                                                    }, {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly srcSet: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly required: readonly ["srcSet"];
                                                    }];
                                                };
                                                readonly separator: {
                                                    readonly type: "string";
                                                };
                                                readonly separatorLine: {
                                                    readonly type: "boolean";
                                                };
                                                readonly linePosition: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["top", "bottom"];
                                                    readonly default: "top";
                                                };
                                                readonly version: {
                                                    readonly type: "string";
                                                };
                                                readonly menuStyle: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["drilldown"];
                                                };
                                                readonly expanded: {
                                                    readonly type: "string";
                                                    readonly const: "always";
                                                };
                                                readonly selectFirstItemOnExpand: {
                                                    readonly type: "boolean";
                                                };
                                                readonly flatten: {
                                                    readonly type: "boolean";
                                                };
                                                readonly linkedSidebars: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly type: "object";
                                        };
                                    };
                                };
                                readonly additionalProperties: false;
                            };
                            readonly products: {
                                readonly type: "object";
                                readonly additionalProperties: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly name: {
                                            readonly type: "string";
                                        };
                                        readonly icon: {
                                            readonly type: "string";
                                        };
                                        readonly folder: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly additionalProperties: false;
                                    readonly required: readonly ["name", "folder"];
                                };
                            };
                            readonly footer: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly hide: {
                                        readonly type: "boolean";
                                    };
                                    readonly items: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly properties: {
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly page: {
                                                                readonly type: "string";
                                                            };
                                                            readonly directory: {
                                                                readonly type: "string";
                                                            };
                                                            readonly disconnect: {
                                                                readonly type: "boolean";
                                                                readonly default: false;
                                                            };
                                                            readonly group: {
                                                                readonly type: "string";
                                                            };
                                                            readonly label: {
                                                                readonly type: "string";
                                                            };
                                                            readonly href: {
                                                                readonly type: "string";
                                                            };
                                                            readonly external: {
                                                                readonly type: "boolean";
                                                            };
                                                            readonly labelTranslationKey: {
                                                                readonly type: "string";
                                                            };
                                                            readonly groupTranslationKey: {
                                                                readonly type: "string";
                                                            };
                                                            readonly icon: {
                                                                readonly oneOf: readonly [{
                                                                    readonly type: "string";
                                                                }, {
                                                                    readonly type: "object";
                                                                    readonly properties: {
                                                                        readonly srcSet: {
                                                                            readonly type: "string";
                                                                        };
                                                                    };
                                                                    readonly required: readonly ["srcSet"];
                                                                }];
                                                            };
                                                            readonly separator: {
                                                                readonly type: "string";
                                                            };
                                                            readonly separatorLine: {
                                                                readonly type: "boolean";
                                                            };
                                                            readonly linePosition: {
                                                                readonly type: "string";
                                                                readonly enum: readonly ["top", "bottom"];
                                                                readonly default: "top";
                                                            };
                                                            readonly version: {
                                                                readonly type: "string";
                                                            };
                                                            readonly menuStyle: {
                                                                readonly type: "string";
                                                                readonly enum: readonly ["drilldown"];
                                                            };
                                                            readonly expanded: {
                                                                readonly type: "string";
                                                                readonly const: "always";
                                                            };
                                                            readonly selectFirstItemOnExpand: {
                                                                readonly type: "boolean";
                                                            };
                                                            readonly flatten: {
                                                                readonly type: "boolean";
                                                            };
                                                            readonly linkedSidebars: {
                                                                readonly type: "array";
                                                                readonly items: {
                                                                    readonly type: "string";
                                                                };
                                                            };
                                                            readonly items: {
                                                                readonly type: "array";
                                                                readonly items: {
                                                                    readonly type: "object";
                                                                    readonly additionalProperties: true;
                                                                };
                                                            };
                                                        };
                                                    };
                                                };
                                                readonly page: {
                                                    readonly type: "string";
                                                };
                                                readonly directory: {
                                                    readonly type: "string";
                                                };
                                                readonly disconnect: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly group: {
                                                    readonly type: "string";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly href: {
                                                    readonly type: "string";
                                                };
                                                readonly external: {
                                                    readonly type: "boolean";
                                                };
                                                readonly labelTranslationKey: {
                                                    readonly type: "string";
                                                };
                                                readonly groupTranslationKey: {
                                                    readonly type: "string";
                                                };
                                                readonly icon: {
                                                    readonly oneOf: readonly [{
                                                        readonly type: "string";
                                                    }, {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly srcSet: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly required: readonly ["srcSet"];
                                                    }];
                                                };
                                                readonly separator: {
                                                    readonly type: "string";
                                                };
                                                readonly separatorLine: {
                                                    readonly type: "boolean";
                                                };
                                                readonly linePosition: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["top", "bottom"];
                                                    readonly default: "top";
                                                };
                                                readonly version: {
                                                    readonly type: "string";
                                                };
                                                readonly menuStyle: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["drilldown"];
                                                };
                                                readonly expanded: {
                                                    readonly type: "string";
                                                    readonly const: "always";
                                                };
                                                readonly selectFirstItemOnExpand: {
                                                    readonly type: "boolean";
                                                };
                                                readonly flatten: {
                                                    readonly type: "boolean";
                                                };
                                                readonly linkedSidebars: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly type: "object";
                                        };
                                    };
                                    readonly copyrightText: {
                                        readonly type: "string";
                                    };
                                    readonly logo: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly hide: {
                                                readonly type: "boolean";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                    };
                                };
                                readonly additionalProperties: false;
                            };
                            readonly sidebar: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly hide: {
                                        readonly type: "boolean";
                                    };
                                    readonly separatorLine: {
                                        readonly type: "boolean";
                                    };
                                    readonly linePosition: {
                                        readonly type: "string";
                                        readonly enum: readonly ["top", "bottom"];
                                        readonly default: "bottom";
                                    };
                                };
                                readonly additionalProperties: false;
                            };
                            readonly scripts: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly head: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly src: {
                                                    readonly type: "string";
                                                };
                                                readonly async: {
                                                    readonly type: "boolean";
                                                };
                                                readonly crossorigin: {
                                                    readonly type: "string";
                                                };
                                                readonly defer: {
                                                    readonly type: "boolean";
                                                };
                                                readonly fetchpriority: {
                                                    readonly type: "string";
                                                };
                                                readonly integrity: {
                                                    readonly type: "string";
                                                };
                                                readonly module: {
                                                    readonly type: "boolean";
                                                };
                                                readonly nomodule: {
                                                    readonly type: "boolean";
                                                };
                                                readonly nonce: {
                                                    readonly type: "string";
                                                };
                                                readonly referrerpolicy: {
                                                    readonly type: "string";
                                                };
                                                readonly type: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly required: readonly ["src"];
                                            readonly additionalProperties: true;
                                        };
                                    };
                                    readonly body: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly src: {
                                                    readonly type: "string";
                                                };
                                                readonly async: {
                                                    readonly type: "boolean";
                                                };
                                                readonly crossorigin: {
                                                    readonly type: "string";
                                                };
                                                readonly defer: {
                                                    readonly type: "boolean";
                                                };
                                                readonly fetchpriority: {
                                                    readonly type: "string";
                                                };
                                                readonly integrity: {
                                                    readonly type: "string";
                                                };
                                                readonly module: {
                                                    readonly type: "boolean";
                                                };
                                                readonly nomodule: {
                                                    readonly type: "boolean";
                                                };
                                                readonly nonce: {
                                                    readonly type: "string";
                                                };
                                                readonly referrerpolicy: {
                                                    readonly type: "string";
                                                };
                                                readonly type: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly required: readonly ["src"];
                                            readonly additionalProperties: true;
                                        };
                                    };
                                };
                                readonly additionalProperties: false;
                            };
                            readonly links: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly href: {
                                            readonly type: "string";
                                        };
                                        readonly as: {
                                            readonly type: "string";
                                        };
                                        readonly crossorigin: {
                                            readonly type: "string";
                                        };
                                        readonly fetchpriority: {
                                            readonly type: "string";
                                        };
                                        readonly hreflang: {
                                            readonly type: "string";
                                        };
                                        readonly imagesizes: {
                                            readonly type: "string";
                                        };
                                        readonly imagesrcset: {
                                            readonly type: "string";
                                        };
                                        readonly integrity: {
                                            readonly type: "string";
                                        };
                                        readonly media: {
                                            readonly type: "string";
                                        };
                                        readonly prefetch: {
                                            readonly type: "string";
                                        };
                                        readonly referrerpolicy: {
                                            readonly type: "string";
                                        };
                                        readonly rel: {
                                            readonly type: "string";
                                        };
                                        readonly sizes: {
                                            readonly type: "string";
                                        };
                                        readonly title: {
                                            readonly type: "string";
                                        };
                                        readonly type: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["href"];
                                    readonly additionalProperties: true;
                                };
                            };
                            readonly feedback: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly hide: {
                                        readonly type: "boolean";
                                        readonly default: false;
                                    };
                                    readonly type: {
                                        readonly type: "string";
                                        readonly enum: readonly ["rating", "sentiment", "comment", "reasons", "mood", "scale"];
                                        readonly default: "sentiment";
                                    };
                                    readonly settings: {
                                        readonly hide: {
                                            readonly type: "boolean";
                                        };
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly label: {
                                                readonly type: "string";
                                            };
                                            readonly submitText: {
                                                readonly type: "string";
                                            };
                                            readonly buttonText: {
                                                readonly type: "string";
                                            };
                                            readonly component: {
                                                readonly type: "string";
                                                readonly enum: readonly ["radio", "checkbox"];
                                                readonly default: "checkbox";
                                            };
                                            readonly items: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                                readonly minItems: 1;
                                            };
                                            readonly leftScaleLabel: {
                                                readonly type: "string";
                                            };
                                            readonly rightScaleLabel: {
                                                readonly type: "string";
                                            };
                                            readonly reasons: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly hide: {
                                                        readonly type: "boolean";
                                                        readonly default: false;
                                                    };
                                                    readonly component: {
                                                        readonly type: "string";
                                                        readonly enum: readonly ["radio", "checkbox"];
                                                        readonly default: "checkbox";
                                                    };
                                                    readonly label: {
                                                        readonly type: "string";
                                                    };
                                                    readonly items: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                            readonly comment: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly hide: {
                                                        readonly type: "boolean";
                                                        readonly default: false;
                                                    };
                                                    readonly label: {
                                                        readonly type: "string";
                                                    };
                                                    readonly likeLabel: {
                                                        readonly type: "string";
                                                    };
                                                    readonly dislikeLabel: {
                                                        readonly type: "string";
                                                    };
                                                    readonly satisfiedLabel: {
                                                        readonly type: "string";
                                                    };
                                                    readonly neutralLabel: {
                                                        readonly type: "string";
                                                    };
                                                    readonly dissatisfiedLabel: {
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                        };
                                        readonly additionalProperties: false;
                                    };
                                };
                                readonly additionalProperties: false;
                                readonly default: {};
                            };
                            readonly search: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly hide: {
                                        readonly type: "boolean";
                                    };
                                    readonly placement: {
                                        readonly type: "string";
                                        readonly default: "navbar";
                                    };
                                    readonly shortcuts: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                        readonly default: readonly ["/"];
                                    };
                                    readonly suggestedPages: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly page: {
                                                    readonly type: "string";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly labelTranslationKey: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly required: readonly ["page"];
                                        };
                                    };
                                    readonly fuzzy: {
                                        readonly type: "boolean";
                                        readonly default: false;
                                    };
                                };
                                readonly additionalProperties: false;
                                readonly default: {};
                            };
                            readonly colorMode: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly hide: {
                                        readonly type: "boolean";
                                    };
                                    readonly ignoreDetection: {
                                        readonly type: "boolean";
                                    };
                                    readonly modes: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                        readonly default: readonly ["light", "dark"];
                                    };
                                };
                                readonly additionalProperties: false;
                                readonly default: {};
                            };
                            readonly navigation: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly nextButton: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly hide: {
                                                readonly type: "boolean";
                                            };
                                            readonly text: {
                                                readonly type: "string";
                                                readonly default: "Next to {{label}}";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly default: {};
                                    };
                                    readonly previousButton: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly hide: {
                                                readonly type: "boolean";
                                            };
                                            readonly text: {
                                                readonly type: "string";
                                                readonly default: "Back to {{label}}";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly default: {};
                                    };
                                };
                                readonly additionalProperties: false;
                                readonly default: {};
                            };
                            readonly codeSnippet: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly elementFormat: {
                                        readonly type: "string";
                                        readonly default: "icon";
                                    };
                                    readonly copy: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly hide: {
                                                readonly type: "boolean";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly default: {
                                            readonly hide: false;
                                        };
                                    };
                                    readonly report: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly hide: {
                                                readonly type: "boolean";
                                            };
                                            readonly tooltipText: {
                                                readonly type: "string";
                                            };
                                            readonly buttonText: {
                                                readonly type: "string";
                                            };
                                            readonly label: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly default: {
                                            readonly hide: false;
                                        };
                                    };
                                    readonly expand: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly hide: {
                                                readonly type: "boolean";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly default: {
                                            readonly hide: false;
                                        };
                                    };
                                    readonly collapse: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly hide: {
                                                readonly type: "boolean";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly default: {
                                            readonly hide: false;
                                        };
                                    };
                                };
                                readonly additionalProperties: false;
                                readonly default: {};
                            };
                            readonly markdown: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly frontMatterKeysToResolve: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                        readonly default: readonly ["image", "links"];
                                    };
                                    readonly partialsFolders: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                        readonly default: readonly ["_partials"];
                                    };
                                    readonly lastUpdatedBlock: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly hide: {
                                                readonly type: "boolean";
                                            };
                                            readonly format: {
                                                readonly type: "string";
                                                readonly enum: readonly ["timeago", "iso", "long", "short"];
                                                readonly default: "timeago";
                                            };
                                            readonly locale: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly default: {};
                                    };
                                    readonly toc: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly hide: {
                                                readonly type: "boolean";
                                            };
                                            readonly header: {
                                                readonly type: "string";
                                                readonly default: "On this page";
                                            };
                                            readonly depth: {
                                                readonly type: "integer";
                                                readonly default: 3;
                                                readonly minimum: 1;
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly default: {};
                                    };
                                    readonly editPage: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly hide: {
                                                readonly type: "boolean";
                                            };
                                            readonly baseUrl: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly default: {};
                                    };
                                };
                                readonly additionalProperties: false;
                                readonly default: {};
                            };
                            readonly openapi: {
                                readonly type: "object";
                                readonly additionalProperties: true;
                            };
                            readonly graphql: {
                                readonly type: "object";
                                readonly additionalProperties: true;
                            };
                            readonly analytics: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly adobe: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly includeInDevelopment: {
                                                readonly type: "boolean";
                                            };
                                            readonly scriptUrl: {
                                                readonly type: "string";
                                            };
                                            readonly pageViewEventName: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["scriptUrl"];
                                    };
                                    readonly amplitude: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly includeInDevelopment: {
                                                readonly type: "boolean";
                                            };
                                            readonly apiKey: {
                                                readonly type: "string";
                                            };
                                            readonly head: {
                                                readonly type: "boolean";
                                            };
                                            readonly respectDNT: {
                                                readonly type: "boolean";
                                            };
                                            readonly exclude: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly outboundClickEventName: {
                                                readonly type: "string";
                                            };
                                            readonly pageViewEventName: {
                                                readonly type: "string";
                                            };
                                            readonly amplitudeConfig: {
                                                readonly type: "object";
                                                readonly additionalProperties: true;
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["apiKey"];
                                    };
                                    readonly fullstory: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly includeInDevelopment: {
                                                readonly type: "boolean";
                                            };
                                            readonly orgId: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["orgId"];
                                    };
                                    readonly heap: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly includeInDevelopment: {
                                                readonly type: "boolean";
                                            };
                                            readonly appId: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["appId"];
                                    };
                                    readonly rudderstack: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly includeInDevelopment: {
                                                readonly type: "boolean";
                                            };
                                            readonly writeKey: {
                                                readonly type: "string";
                                                readonly minLength: 10;
                                            };
                                            readonly trackPage: {
                                                readonly type: "boolean";
                                            };
                                            readonly dataPlaneUrl: {
                                                readonly type: "string";
                                            };
                                            readonly controlPlaneUrl: {
                                                readonly type: "string";
                                            };
                                            readonly sdkUrl: {
                                                readonly type: "string";
                                            };
                                            readonly loadOptions: {
                                                readonly type: "object";
                                                readonly additionalProperties: true;
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["writeKey"];
                                    };
                                    readonly segment: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly includeInDevelopment: {
                                                readonly type: "boolean";
                                            };
                                            readonly writeKey: {
                                                readonly type: "string";
                                                readonly minLength: 10;
                                            };
                                            readonly trackPage: {
                                                readonly type: "boolean";
                                            };
                                            readonly includeTitleInPageCall: {
                                                readonly type: "boolean";
                                            };
                                            readonly host: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["writeKey"];
                                    };
                                    readonly gtm: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly includeInDevelopment: {
                                                readonly type: "boolean";
                                            };
                                            readonly trackingId: {
                                                readonly type: "string";
                                            };
                                            readonly gtmAuth: {
                                                readonly type: "string";
                                            };
                                            readonly gtmPreview: {
                                                readonly type: "string";
                                            };
                                            readonly defaultDataLayer: {};
                                            readonly dataLayerName: {
                                                readonly type: "string";
                                            };
                                            readonly enableWebVitalsTracking: {
                                                readonly type: "boolean";
                                            };
                                            readonly selfHostedOrigin: {
                                                readonly type: "string";
                                            };
                                            readonly pageViewEventName: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["trackingId"];
                                    };
                                    readonly ga: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly includeInDevelopment: {
                                                readonly type: "boolean";
                                            };
                                            readonly trackingId: {
                                                readonly type: "string";
                                            };
                                            readonly conversionId: {
                                                readonly type: "string";
                                            };
                                            readonly floodlightId: {
                                                readonly type: "string";
                                            };
                                            readonly head: {
                                                readonly type: "boolean";
                                            };
                                            readonly respectDNT: {
                                                readonly type: "boolean";
                                            };
                                            readonly exclude: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly optimizeId: {
                                                readonly type: "string";
                                            };
                                            readonly anonymizeIp: {
                                                readonly type: "boolean";
                                            };
                                            readonly cookieExpires: {
                                                readonly type: "number";
                                            };
                                            readonly trackers: {
                                                readonly type: "object";
                                                readonly additionalProperties: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly includeInDevelopment: {
                                                            readonly type: "boolean";
                                                        };
                                                        readonly trackingId: {
                                                            readonly type: "string";
                                                        };
                                                        readonly conversionId: {
                                                            readonly type: "string";
                                                        };
                                                        readonly floodlightId: {
                                                            readonly type: "string";
                                                        };
                                                        readonly optimizeId: {
                                                            readonly type: "string";
                                                        };
                                                        readonly exclude: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly additionalProperties: false;
                                                    readonly required: readonly ["trackingId"];
                                                };
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["trackingId"];
                                    };
                                };
                            };
                            readonly userProfile: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly hide: {
                                        readonly type: "boolean";
                                    };
                                    readonly loginLabel: {
                                        readonly type: "string";
                                        readonly default: "Login";
                                    };
                                    readonly logoutLabel: {
                                        readonly type: "string";
                                        readonly default: "Logout";
                                    };
                                    readonly menu: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly external: {
                                                    readonly type: "boolean";
                                                };
                                                readonly link: {
                                                    readonly type: "string";
                                                };
                                                readonly separatorLine: {
                                                    readonly type: "boolean";
                                                };
                                            };
                                            readonly additionalProperties: true;
                                        };
                                        readonly default: readonly [];
                                    };
                                };
                                readonly additionalProperties: false;
                                readonly default: {};
                            };
                            readonly versionPicker: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly hide: {
                                        readonly type: "boolean";
                                    };
                                    readonly showForUnversioned: {
                                        readonly type: "boolean";
                                    };
                                };
                            };
                            readonly breadcrumbs: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly hide: {
                                        readonly type: "boolean";
                                    };
                                    readonly prefixItems: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly labelTranslationKey: {
                                                    readonly type: "string";
                                                };
                                                readonly page: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly additionalProperties: false;
                                            readonly default: {};
                                        };
                                    };
                                };
                                readonly additionalProperties: false;
                                readonly default: {};
                            };
                            readonly catalog: {
                                readonly type: "object";
                                readonly patternProperties: {
                                    readonly '.*': {
                                        readonly type: "object";
                                        readonly additionalProperties: true;
                                        readonly required: readonly ["slug", "items"];
                                        readonly properties: {
                                            readonly slug: {
                                                readonly type: "string";
                                            };
                                            readonly filters: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "object";
                                                    readonly additionalProperties: false;
                                                    readonly required: readonly ["title", "property"];
                                                    readonly properties: {
                                                        readonly type: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["select", "checkboxes", "date-range"];
                                                        };
                                                        readonly title: {
                                                            readonly type: "string";
                                                        };
                                                        readonly titleTranslationKey: {
                                                            readonly type: "string";
                                                        };
                                                        readonly property: {
                                                            readonly type: "string";
                                                        };
                                                        readonly parentFilter: {
                                                            readonly type: "string";
                                                        };
                                                        readonly valuesMapping: {
                                                            readonly type: "object";
                                                            readonly additionalProperties: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly missingCategoryName: {
                                                            readonly type: "string";
                                                        };
                                                        readonly missingCategoryNameTranslationKey: {
                                                            readonly type: "string";
                                                        };
                                                        readonly options: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                            readonly groupByFirstFilter: {
                                                readonly type: "boolean";
                                            };
                                            readonly filterValuesCasing: {
                                                readonly type: "string";
                                                readonly enum: readonly ["sentence", "original", "lowercase", "uppercase"];
                                            };
                                            readonly items: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly properties: {
                                                        readonly items: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly page: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly directory: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly disconnect: {
                                                                        readonly type: "boolean";
                                                                        readonly default: false;
                                                                    };
                                                                    readonly group: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly label: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly href: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly external: {
                                                                        readonly type: "boolean";
                                                                    };
                                                                    readonly labelTranslationKey: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly groupTranslationKey: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly icon: {
                                                                        readonly oneOf: readonly [{
                                                                            readonly type: "string";
                                                                        }, {
                                                                            readonly type: "object";
                                                                            readonly properties: {
                                                                                readonly srcSet: {
                                                                                    readonly type: "string";
                                                                                };
                                                                            };
                                                                            readonly required: readonly ["srcSet"];
                                                                        }];
                                                                    };
                                                                    readonly separator: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly separatorLine: {
                                                                        readonly type: "boolean";
                                                                    };
                                                                    readonly linePosition: {
                                                                        readonly type: "string";
                                                                        readonly enum: readonly ["top", "bottom"];
                                                                        readonly default: "top";
                                                                    };
                                                                    readonly version: {
                                                                        readonly type: "string";
                                                                    };
                                                                    readonly menuStyle: {
                                                                        readonly type: "string";
                                                                        readonly enum: readonly ["drilldown"];
                                                                    };
                                                                    readonly expanded: {
                                                                        readonly type: "string";
                                                                        readonly const: "always";
                                                                    };
                                                                    readonly selectFirstItemOnExpand: {
                                                                        readonly type: "boolean";
                                                                    };
                                                                    readonly flatten: {
                                                                        readonly type: "boolean";
                                                                    };
                                                                    readonly linkedSidebars: {
                                                                        readonly type: "array";
                                                                        readonly items: {
                                                                            readonly type: "string";
                                                                        };
                                                                    };
                                                                    readonly items: {
                                                                        readonly type: "array";
                                                                        readonly items: {
                                                                            readonly type: "object";
                                                                            readonly additionalProperties: true;
                                                                        };
                                                                    };
                                                                };
                                                            };
                                                        };
                                                        readonly page: {
                                                            readonly type: "string";
                                                        };
                                                        readonly directory: {
                                                            readonly type: "string";
                                                        };
                                                        readonly disconnect: {
                                                            readonly type: "boolean";
                                                            readonly default: false;
                                                        };
                                                        readonly group: {
                                                            readonly type: "string";
                                                        };
                                                        readonly label: {
                                                            readonly type: "string";
                                                        };
                                                        readonly href: {
                                                            readonly type: "string";
                                                        };
                                                        readonly external: {
                                                            readonly type: "boolean";
                                                        };
                                                        readonly labelTranslationKey: {
                                                            readonly type: "string";
                                                        };
                                                        readonly groupTranslationKey: {
                                                            readonly type: "string";
                                                        };
                                                        readonly icon: {
                                                            readonly oneOf: readonly [{
                                                                readonly type: "string";
                                                            }, {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly srcSet: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                                readonly required: readonly ["srcSet"];
                                                            }];
                                                        };
                                                        readonly separator: {
                                                            readonly type: "string";
                                                        };
                                                        readonly separatorLine: {
                                                            readonly type: "boolean";
                                                        };
                                                        readonly linePosition: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["top", "bottom"];
                                                            readonly default: "top";
                                                        };
                                                        readonly version: {
                                                            readonly type: "string";
                                                        };
                                                        readonly menuStyle: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["drilldown"];
                                                        };
                                                        readonly expanded: {
                                                            readonly type: "string";
                                                            readonly const: "always";
                                                        };
                                                        readonly selectFirstItemOnExpand: {
                                                            readonly type: "boolean";
                                                        };
                                                        readonly flatten: {
                                                            readonly type: "boolean";
                                                        };
                                                        readonly linkedSidebars: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly type: "object";
                                                };
                                            };
                                            readonly requiredPermission: {
                                                readonly type: "string";
                                            };
                                            readonly separateVersions: {
                                                readonly type: "boolean";
                                            };
                                            readonly title: {
                                                readonly type: "string";
                                            };
                                            readonly titleTranslationKey: {
                                                readonly type: "string";
                                            };
                                            readonly description: {
                                                readonly type: "string";
                                            };
                                            readonly descriptionTranslationKey: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                };
                            };
                            readonly scorecard: {
                                readonly type: "object";
                                readonly additionalProperties: true;
                                readonly required: readonly [];
                                readonly properties: {
                                    readonly ignoreNonCompliant: {
                                        readonly type: "boolean";
                                        readonly default: false;
                                    };
                                    readonly teamMetadataProperty: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly property: {
                                                readonly type: "string";
                                            };
                                            readonly label: {
                                                readonly type: "string";
                                            };
                                            readonly default: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly levels: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly required: readonly ["name"];
                                            readonly properties: {
                                                readonly name: {
                                                    readonly type: "string";
                                                };
                                                readonly color: {
                                                    readonly type: "string";
                                                };
                                                readonly extends: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly rules: {
                                                    readonly type: "object";
                                                    readonly additionalProperties: {
                                                        readonly oneOf: readonly [{
                                                            readonly type: "string";
                                                        }, {
                                                            readonly type: "object";
                                                        }];
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                    };
                                    readonly targets: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly required: readonly ["where"];
                                            readonly properties: {
                                                readonly minimumLevel: {
                                                    readonly type: "string";
                                                };
                                                readonly where: {
                                                    readonly type: "object";
                                                    readonly required: readonly ["metadata"];
                                                    readonly properties: {
                                                        readonly metadata: {
                                                            readonly type: "object";
                                                            readonly additionalProperties: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                    };
                                                    readonly additionalProperties: false;
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                    };
                                };
                            };
                        };
                        readonly additionalProperties: true;
                        readonly default: {};
                    };
                    readonly reunite: {
                        readonly type: "object";
                        readonly properties: {
                            readonly ignoreLinkChecker: {
                                readonly type: "boolean";
                            };
                        };
                        readonly additionalProperties: false;
                    };
                };
                readonly default: {
                    readonly redirects: {};
                };
            };
        };
        readonly licenseKey: {
            readonly type: "string";
        };
        readonly redirects: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly type: "object";
                readonly properties: {
                    readonly to: {
                        readonly type: "string";
                    };
                    readonly type: {
                        readonly type: "number";
                        readonly default: 301;
                    };
                };
                readonly additionalProperties: false;
            };
            readonly default: {};
        };
        readonly seo: {
            readonly type: "object";
            readonly properties: {
                readonly title: {
                    readonly type: "string";
                };
                readonly description: {
                    readonly type: "string";
                };
                readonly siteUrl: {
                    readonly type: "string";
                };
                readonly image: {
                    readonly type: "string";
                };
                readonly keywords: {
                    readonly oneOf: readonly [{
                        readonly type: "array";
                        readonly items: {
                            readonly type: "string";
                        };
                    }, {
                        readonly type: "string";
                    }];
                };
                readonly lang: {
                    readonly type: "string";
                };
                readonly jsonLd: {
                    readonly type: "object";
                };
                readonly meta: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly name: {
                                readonly type: "string";
                            };
                            readonly content: {
                                readonly type: "string";
                            };
                        };
                        readonly required: readonly ["name", "content"];
                        readonly additionalProperties: false;
                    };
                };
            };
            readonly additionalProperties: false;
        };
        readonly rbac: {
            readonly type: "object";
            readonly properties: {
                readonly teamNamePatterns: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
                readonly teamFolders: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
                readonly teamFoldersBaseRoles: {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "string";
                    };
                };
                readonly cms: {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "string";
                    };
                };
                readonly reunite: {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "string";
                    };
                };
                readonly content: {
                    readonly type: "object";
                    readonly properties: {
                        readonly '**': {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly type: "string";
                            };
                        };
                    };
                    readonly additionalProperties: {
                        readonly type: "object";
                        readonly additionalProperties: {
                            readonly type: "string";
                        };
                    };
                };
            };
            readonly additionalProperties: {
                readonly type: "object";
                readonly additionalProperties: {
                    readonly type: "string";
                };
            };
        };
        readonly responseHeaders: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly type: "array";
                readonly items: {
                    readonly type: "object";
                    readonly properties: {
                        readonly name: {
                            readonly type: "string";
                        };
                        readonly value: {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly required: readonly ["name", "value"];
                };
            };
        };
        readonly mockServer: {
            readonly type: "object";
            readonly properties: {
                readonly off: {
                    readonly type: "boolean";
                    readonly default: false;
                };
                readonly position: {
                    readonly type: "string";
                    readonly enum: readonly ["first", "last", "replace", "off"];
                    readonly default: "first";
                };
                readonly strictExamples: {
                    readonly type: "boolean";
                    readonly default: false;
                };
                readonly errorIfForcedExampleNotFound: {
                    readonly type: "boolean";
                    readonly default: false;
                };
                readonly description: {
                    readonly type: "string";
                };
            };
        };
        readonly apis: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly type: "object";
                readonly properties: {
                    readonly root: {
                        readonly type: "string";
                    };
                    readonly output: {
                        readonly type: "string";
                        readonly pattern: "(.ya?ml|.json)$";
                    };
                    readonly rbac: {
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                    readonly theme: {
                        readonly type: "object";
                        readonly properties: {
                            readonly openapi: {
                                readonly type: "object";
                                readonly additionalProperties: true;
                            };
                            readonly graphql: {
                                readonly type: "object";
                                readonly additionalProperties: true;
                            };
                        };
                        readonly additionalProperties: false;
                    };
                    readonly title: {
                        readonly type: "string";
                    };
                    readonly metadata: {
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                    readonly rules: {
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                    readonly decorators: {
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                    readonly preprocessors: {
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                };
                readonly required: readonly ["root"];
            };
        };
        readonly ssoOnPrem: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly oneOf: readonly [{
                    readonly type: "object";
                    readonly properties: {
                        readonly type: {
                            readonly type: "string";
                            readonly const: AuthProviderType.OIDC;
                        };
                        readonly title: {
                            readonly type: "string";
                        };
                        readonly pkce: {
                            readonly type: "boolean";
                            readonly default: false;
                        };
                        readonly configurationUrl: {
                            readonly type: "string";
                            readonly minLength: 1;
                        };
                        readonly configuration: {
                            readonly type: "object";
                            readonly properties: {
                                readonly end_session_endpoint: {
                                    readonly type: "string";
                                };
                                readonly token_endpoint: {
                                    readonly type: "string";
                                };
                                readonly authorization_endpoint: {
                                    readonly type: "string";
                                };
                                readonly jwks_uri: {
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["token_endpoint", "authorization_endpoint"];
                            readonly additionalProperties: true;
                        };
                        readonly clientId: {
                            readonly type: "string";
                            readonly minLength: 1;
                        };
                        readonly clientSecret: {
                            readonly type: "string";
                            readonly minLength: 0;
                        };
                        readonly teamsClaimName: {
                            readonly type: "string";
                        };
                        readonly teamsClaimMap: {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly type: "string";
                            };
                        };
                        readonly defaultTeams: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                        };
                        readonly scopes: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                        };
                        readonly tokenExpirationTime: {
                            readonly type: "number";
                        };
                        readonly authorizationRequestCustomParams: {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly type: "string";
                            };
                        };
                        readonly tokenRequestCustomParams: {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly type: "string";
                            };
                        };
                        readonly audience: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                        };
                    };
                    readonly required: readonly ["type", "clientId"];
                    readonly oneOf: readonly [{
                        readonly required: readonly ["configurationUrl"];
                    }, {
                        readonly required: readonly ["configuration"];
                    }];
                    readonly additionalProperties: false;
                }, {
                    readonly type: "object";
                    readonly properties: {
                        readonly type: {
                            readonly type: "string";
                            readonly const: AuthProviderType.SAML2;
                        };
                        readonly title: {
                            readonly type: "string";
                        };
                        readonly issuerId: {
                            readonly type: "string";
                        };
                        readonly entityId: {
                            readonly type: "string";
                        };
                        readonly ssoUrl: {
                            readonly type: "string";
                        };
                        readonly x509PublicCert: {
                            readonly type: "string";
                        };
                        readonly teamsAttributeName: {
                            readonly type: "string";
                            readonly default: "https://redocly.com/sso/teams";
                        };
                        readonly teamsAttributeMap: {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly type: "string";
                            };
                        };
                        readonly defaultTeams: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                        };
                    };
                    readonly additionalProperties: false;
                    readonly required: readonly ["type", "issuerId", "ssoUrl", "x509PublicCert"];
                }, {
                    readonly type: "object";
                    readonly properties: {
                        readonly type: {
                            readonly type: "string";
                            readonly const: AuthProviderType.BASIC;
                        };
                        readonly title: {
                            readonly type: "string";
                        };
                        readonly credentials: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly username: {
                                        readonly type: "string";
                                    };
                                    readonly password: {
                                        readonly type: "string";
                                    };
                                    readonly passwordHash: {
                                        readonly type: "string";
                                    };
                                    readonly teams: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly required: readonly ["username"];
                                readonly additionalProperties: false;
                            };
                        };
                    };
                    readonly required: readonly ["type", "credentials"];
                    readonly additionalProperties: false;
                }];
                readonly discriminator: {
                    readonly propertyName: "type";
                };
            };
        };
        readonly sso: {
            readonly oneOf: readonly [{
                readonly type: "array";
                readonly items: {
                    readonly type: "string";
                    readonly enum: readonly ["REDOCLY", "CORPORATE", "GUEST"];
                };
                readonly uniqueItems: true;
            }, {
                readonly type: "string";
                readonly enum: readonly ["REDOCLY", "CORPORATE", "GUEST"];
            }];
        };
        readonly residency: {
            readonly type: "string";
        };
        readonly developerOnboarding: {
            readonly type: "object";
            readonly required: readonly ["adapters"];
            readonly additionalProperties: false;
            readonly properties: {
                readonly adapters: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly oneOf: readonly [{
                            readonly type: "object";
                            readonly properties: {
                                readonly type: {
                                    readonly type: "string";
                                    readonly const: "APIGEE_X";
                                };
                                readonly apiUrl: {
                                    readonly type: "string";
                                };
                                readonly stage: {
                                    readonly type: "string";
                                    readonly default: "non-production";
                                };
                                readonly organizationName: {
                                    readonly type: "string";
                                };
                                readonly ignoreApiProducts: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                    };
                                };
                                readonly allowApiProductsOutsideCatalog: {
                                    readonly type: "boolean";
                                    readonly default: false;
                                };
                                readonly auth: {
                                    readonly type: "object";
                                    readonly oneOf: readonly [{
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly type: {
                                                readonly type: "string";
                                                readonly const: ApigeeDevOnboardingIntegrationAuthType.OAUTH2;
                                            };
                                            readonly tokenEndpoint: {
                                                readonly type: "string";
                                            };
                                            readonly clientId: {
                                                readonly type: "string";
                                            };
                                            readonly clientSecret: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["type", "tokenEndpoint", "clientId", "clientSecret"];
                                    }, {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly type: {
                                                readonly type: "string";
                                                readonly const: ApigeeDevOnboardingIntegrationAuthType.SERVICE_ACCOUNT;
                                            };
                                            readonly serviceAccountEmail: {
                                                readonly type: "string";
                                            };
                                            readonly serviceAccountPrivateKey: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["type", "serviceAccountEmail", "serviceAccountPrivateKey"];
                                    }];
                                    readonly discriminator: {
                                        readonly propertyName: "type";
                                    };
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["type", "organizationName", "auth"];
                        }, {
                            readonly properties: {
                                readonly type: {
                                    readonly type: "string";
                                    readonly const: "APIGEE_EDGE";
                                };
                                readonly apiUrl: {
                                    readonly type: "string";
                                };
                                readonly stage: {
                                    readonly type: "string";
                                    readonly default: "non-production";
                                };
                                readonly organizationName: {
                                    readonly type: "string";
                                };
                                readonly ignoreApiProducts: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                    };
                                };
                                readonly allowApiProductsOutsideCatalog: {
                                    readonly type: "boolean";
                                    readonly default: false;
                                };
                                readonly auth: {
                                    readonly type: "object";
                                    readonly oneOf: readonly [{
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly type: {
                                                readonly type: "string";
                                                readonly const: ApigeeDevOnboardingIntegrationAuthType.OAUTH2;
                                            };
                                            readonly tokenEndpoint: {
                                                readonly type: "string";
                                            };
                                            readonly clientId: {
                                                readonly type: "string";
                                            };
                                            readonly clientSecret: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["type", "tokenEndpoint", "clientId", "clientSecret"];
                                    }, {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly type: {
                                                readonly type: "string";
                                                readonly const: ApigeeDevOnboardingIntegrationAuthType.SERVICE_ACCOUNT;
                                            };
                                            readonly serviceAccountEmail: {
                                                readonly type: "string";
                                            };
                                            readonly serviceAccountPrivateKey: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["type", "serviceAccountEmail", "serviceAccountPrivateKey"];
                                    }];
                                    readonly discriminator: {
                                        readonly propertyName: "type";
                                    };
                                };
                            };
                            readonly type: "object";
                            readonly additionalProperties: false;
                            readonly required: readonly ["type", "organizationName", "auth"];
                        }, {
                            readonly type: "object";
                            readonly properties: {
                                readonly type: {
                                    readonly type: "string";
                                    readonly const: "GRAVITEE";
                                };
                                readonly apiBaseUrl: {
                                    readonly type: "string";
                                };
                                readonly env: {
                                    readonly type: "string";
                                };
                                readonly allowApiProductsOutsideCatalog: {
                                    readonly type: "boolean";
                                    readonly default: false;
                                };
                                readonly stage: {
                                    readonly type: "string";
                                    readonly default: "non-production";
                                };
                                readonly auth: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly static: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["type", "apiBaseUrl"];
                        }];
                        readonly discriminator: {
                            readonly propertyName: "type";
                        };
                    };
                };
            };
        };
        readonly removeAttribution: {
            readonly type: "boolean";
        };
        readonly i18n: {
            readonly type: "object";
            readonly properties: {
                readonly defaultLocale: {
                    readonly type: "string";
                };
                readonly locales: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                            };
                            readonly name: {
                                readonly type: "string";
                            };
                        };
                        readonly required: readonly ["code"];
                    };
                };
            };
            readonly additionalProperties: false;
            readonly required: readonly ["defaultLocale"];
        };
        readonly metadata: {
            readonly type: "object";
            readonly additionalProperties: true;
        };
        readonly ignore: {
            readonly type: "array";
            readonly items: {
                readonly type: "string";
            };
        };
        readonly theme: {
            readonly type: "object";
            readonly properties: {
                readonly imports: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly default: readonly [];
                };
                readonly logo: {
                    readonly type: "object";
                    readonly properties: {
                        readonly image: {
                            readonly type: "string";
                        };
                        readonly srcSet: {
                            readonly type: "string";
                        };
                        readonly altText: {
                            readonly type: "string";
                        };
                        readonly link: {
                            readonly type: "string";
                        };
                        readonly favicon: {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly navbar: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly items: {
                            readonly type: "array";
                            readonly items: {
                                readonly properties: {
                                    readonly items: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly page: {
                                                    readonly type: "string";
                                                };
                                                readonly directory: {
                                                    readonly type: "string";
                                                };
                                                readonly disconnect: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly group: {
                                                    readonly type: "string";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly href: {
                                                    readonly type: "string";
                                                };
                                                readonly external: {
                                                    readonly type: "boolean";
                                                };
                                                readonly labelTranslationKey: {
                                                    readonly type: "string";
                                                };
                                                readonly groupTranslationKey: {
                                                    readonly type: "string";
                                                };
                                                readonly icon: {
                                                    readonly oneOf: readonly [{
                                                        readonly type: "string";
                                                    }, {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly srcSet: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly required: readonly ["srcSet"];
                                                    }];
                                                };
                                                readonly separator: {
                                                    readonly type: "string";
                                                };
                                                readonly separatorLine: {
                                                    readonly type: "boolean";
                                                };
                                                readonly linePosition: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["top", "bottom"];
                                                    readonly default: "top";
                                                };
                                                readonly version: {
                                                    readonly type: "string";
                                                };
                                                readonly menuStyle: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["drilldown"];
                                                };
                                                readonly expanded: {
                                                    readonly type: "string";
                                                    readonly const: "always";
                                                };
                                                readonly selectFirstItemOnExpand: {
                                                    readonly type: "boolean";
                                                };
                                                readonly flatten: {
                                                    readonly type: "boolean";
                                                };
                                                readonly linkedSidebars: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "object";
                                                        readonly additionalProperties: true;
                                                    };
                                                };
                                            };
                                        };
                                    };
                                    readonly page: {
                                        readonly type: "string";
                                    };
                                    readonly directory: {
                                        readonly type: "string";
                                    };
                                    readonly disconnect: {
                                        readonly type: "boolean";
                                        readonly default: false;
                                    };
                                    readonly group: {
                                        readonly type: "string";
                                    };
                                    readonly label: {
                                        readonly type: "string";
                                    };
                                    readonly href: {
                                        readonly type: "string";
                                    };
                                    readonly external: {
                                        readonly type: "boolean";
                                    };
                                    readonly labelTranslationKey: {
                                        readonly type: "string";
                                    };
                                    readonly groupTranslationKey: {
                                        readonly type: "string";
                                    };
                                    readonly icon: {
                                        readonly oneOf: readonly [{
                                            readonly type: "string";
                                        }, {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly srcSet: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly required: readonly ["srcSet"];
                                        }];
                                    };
                                    readonly separator: {
                                        readonly type: "string";
                                    };
                                    readonly separatorLine: {
                                        readonly type: "boolean";
                                    };
                                    readonly linePosition: {
                                        readonly type: "string";
                                        readonly enum: readonly ["top", "bottom"];
                                        readonly default: "top";
                                    };
                                    readonly version: {
                                        readonly type: "string";
                                    };
                                    readonly menuStyle: {
                                        readonly type: "string";
                                        readonly enum: readonly ["drilldown"];
                                    };
                                    readonly expanded: {
                                        readonly type: "string";
                                        readonly const: "always";
                                    };
                                    readonly selectFirstItemOnExpand: {
                                        readonly type: "boolean";
                                    };
                                    readonly flatten: {
                                        readonly type: "boolean";
                                    };
                                    readonly linkedSidebars: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly type: "object";
                            };
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly products: {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "object";
                        readonly properties: {
                            readonly name: {
                                readonly type: "string";
                            };
                            readonly icon: {
                                readonly type: "string";
                            };
                            readonly folder: {
                                readonly type: "string";
                            };
                        };
                        readonly additionalProperties: false;
                        readonly required: readonly ["name", "folder"];
                    };
                };
                readonly footer: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly items: {
                            readonly type: "array";
                            readonly items: {
                                readonly properties: {
                                    readonly items: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly page: {
                                                    readonly type: "string";
                                                };
                                                readonly directory: {
                                                    readonly type: "string";
                                                };
                                                readonly disconnect: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly group: {
                                                    readonly type: "string";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly href: {
                                                    readonly type: "string";
                                                };
                                                readonly external: {
                                                    readonly type: "boolean";
                                                };
                                                readonly labelTranslationKey: {
                                                    readonly type: "string";
                                                };
                                                readonly groupTranslationKey: {
                                                    readonly type: "string";
                                                };
                                                readonly icon: {
                                                    readonly oneOf: readonly [{
                                                        readonly type: "string";
                                                    }, {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly srcSet: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly required: readonly ["srcSet"];
                                                    }];
                                                };
                                                readonly separator: {
                                                    readonly type: "string";
                                                };
                                                readonly separatorLine: {
                                                    readonly type: "boolean";
                                                };
                                                readonly linePosition: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["top", "bottom"];
                                                    readonly default: "top";
                                                };
                                                readonly version: {
                                                    readonly type: "string";
                                                };
                                                readonly menuStyle: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["drilldown"];
                                                };
                                                readonly expanded: {
                                                    readonly type: "string";
                                                    readonly const: "always";
                                                };
                                                readonly selectFirstItemOnExpand: {
                                                    readonly type: "boolean";
                                                };
                                                readonly flatten: {
                                                    readonly type: "boolean";
                                                };
                                                readonly linkedSidebars: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "object";
                                                        readonly additionalProperties: true;
                                                    };
                                                };
                                            };
                                        };
                                    };
                                    readonly page: {
                                        readonly type: "string";
                                    };
                                    readonly directory: {
                                        readonly type: "string";
                                    };
                                    readonly disconnect: {
                                        readonly type: "boolean";
                                        readonly default: false;
                                    };
                                    readonly group: {
                                        readonly type: "string";
                                    };
                                    readonly label: {
                                        readonly type: "string";
                                    };
                                    readonly href: {
                                        readonly type: "string";
                                    };
                                    readonly external: {
                                        readonly type: "boolean";
                                    };
                                    readonly labelTranslationKey: {
                                        readonly type: "string";
                                    };
                                    readonly groupTranslationKey: {
                                        readonly type: "string";
                                    };
                                    readonly icon: {
                                        readonly oneOf: readonly [{
                                            readonly type: "string";
                                        }, {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly srcSet: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly required: readonly ["srcSet"];
                                        }];
                                    };
                                    readonly separator: {
                                        readonly type: "string";
                                    };
                                    readonly separatorLine: {
                                        readonly type: "boolean";
                                    };
                                    readonly linePosition: {
                                        readonly type: "string";
                                        readonly enum: readonly ["top", "bottom"];
                                        readonly default: "top";
                                    };
                                    readonly version: {
                                        readonly type: "string";
                                    };
                                    readonly menuStyle: {
                                        readonly type: "string";
                                        readonly enum: readonly ["drilldown"];
                                    };
                                    readonly expanded: {
                                        readonly type: "string";
                                        readonly const: "always";
                                    };
                                    readonly selectFirstItemOnExpand: {
                                        readonly type: "boolean";
                                    };
                                    readonly flatten: {
                                        readonly type: "boolean";
                                    };
                                    readonly linkedSidebars: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly type: "object";
                            };
                        };
                        readonly copyrightText: {
                            readonly type: "string";
                        };
                        readonly logo: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                            };
                            readonly additionalProperties: false;
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly sidebar: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly separatorLine: {
                            readonly type: "boolean";
                        };
                        readonly linePosition: {
                            readonly type: "string";
                            readonly enum: readonly ["top", "bottom"];
                            readonly default: "bottom";
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly scripts: {
                    readonly type: "object";
                    readonly properties: {
                        readonly head: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly src: {
                                        readonly type: "string";
                                    };
                                    readonly async: {
                                        readonly type: "boolean";
                                    };
                                    readonly crossorigin: {
                                        readonly type: "string";
                                    };
                                    readonly defer: {
                                        readonly type: "boolean";
                                    };
                                    readonly fetchpriority: {
                                        readonly type: "string";
                                    };
                                    readonly integrity: {
                                        readonly type: "string";
                                    };
                                    readonly module: {
                                        readonly type: "boolean";
                                    };
                                    readonly nomodule: {
                                        readonly type: "boolean";
                                    };
                                    readonly nonce: {
                                        readonly type: "string";
                                    };
                                    readonly referrerpolicy: {
                                        readonly type: "string";
                                    };
                                    readonly type: {
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["src"];
                                readonly additionalProperties: true;
                            };
                        };
                        readonly body: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly src: {
                                        readonly type: "string";
                                    };
                                    readonly async: {
                                        readonly type: "boolean";
                                    };
                                    readonly crossorigin: {
                                        readonly type: "string";
                                    };
                                    readonly defer: {
                                        readonly type: "boolean";
                                    };
                                    readonly fetchpriority: {
                                        readonly type: "string";
                                    };
                                    readonly integrity: {
                                        readonly type: "string";
                                    };
                                    readonly module: {
                                        readonly type: "boolean";
                                    };
                                    readonly nomodule: {
                                        readonly type: "boolean";
                                    };
                                    readonly nonce: {
                                        readonly type: "string";
                                    };
                                    readonly referrerpolicy: {
                                        readonly type: "string";
                                    };
                                    readonly type: {
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["src"];
                                readonly additionalProperties: true;
                            };
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly links: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly href: {
                                readonly type: "string";
                            };
                            readonly as: {
                                readonly type: "string";
                            };
                            readonly crossorigin: {
                                readonly type: "string";
                            };
                            readonly fetchpriority: {
                                readonly type: "string";
                            };
                            readonly hreflang: {
                                readonly type: "string";
                            };
                            readonly imagesizes: {
                                readonly type: "string";
                            };
                            readonly imagesrcset: {
                                readonly type: "string";
                            };
                            readonly integrity: {
                                readonly type: "string";
                            };
                            readonly media: {
                                readonly type: "string";
                            };
                            readonly prefetch: {
                                readonly type: "string";
                            };
                            readonly referrerpolicy: {
                                readonly type: "string";
                            };
                            readonly rel: {
                                readonly type: "string";
                            };
                            readonly sizes: {
                                readonly type: "string";
                            };
                            readonly title: {
                                readonly type: "string";
                            };
                            readonly type: {
                                readonly type: "string";
                            };
                        };
                        readonly required: readonly ["href"];
                        readonly additionalProperties: true;
                    };
                };
                readonly feedback: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                            readonly default: false;
                        };
                        readonly type: {
                            readonly type: "string";
                            readonly enum: readonly ["rating", "sentiment", "comment", "reasons", "mood", "scale"];
                            readonly default: "sentiment";
                        };
                        readonly settings: {
                            readonly hide: {
                                readonly type: "boolean";
                            };
                            readonly type: "object";
                            readonly properties: {
                                readonly label: {
                                    readonly type: "string";
                                };
                                readonly submitText: {
                                    readonly type: "string";
                                };
                                readonly buttonText: {
                                    readonly type: "string";
                                };
                                readonly component: {
                                    readonly type: "string";
                                    readonly enum: readonly ["radio", "checkbox"];
                                    readonly default: "checkbox";
                                };
                                readonly items: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                    };
                                    readonly minItems: 1;
                                };
                                readonly leftScaleLabel: {
                                    readonly type: "string";
                                };
                                readonly rightScaleLabel: {
                                    readonly type: "string";
                                };
                                readonly reasons: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly hide: {
                                            readonly type: "boolean";
                                            readonly default: false;
                                        };
                                        readonly component: {
                                            readonly type: "string";
                                            readonly enum: readonly ["radio", "checkbox"];
                                            readonly default: "checkbox";
                                        };
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly items: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                                readonly comment: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly hide: {
                                            readonly type: "boolean";
                                            readonly default: false;
                                        };
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly likeLabel: {
                                            readonly type: "string";
                                        };
                                        readonly dislikeLabel: {
                                            readonly type: "string";
                                        };
                                        readonly satisfiedLabel: {
                                            readonly type: "string";
                                        };
                                        readonly neutralLabel: {
                                            readonly type: "string";
                                        };
                                        readonly dissatisfiedLabel: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                            };
                            readonly additionalProperties: false;
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {};
                };
                readonly search: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly placement: {
                            readonly type: "string";
                            readonly default: "navbar";
                        };
                        readonly shortcuts: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                            readonly default: readonly ["/"];
                        };
                        readonly suggestedPages: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly page: {
                                        readonly type: "string";
                                    };
                                    readonly label: {
                                        readonly type: "string";
                                    };
                                    readonly labelTranslationKey: {
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["page"];
                            };
                        };
                        readonly fuzzy: {
                            readonly type: "boolean";
                            readonly default: false;
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {};
                };
                readonly colorMode: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly ignoreDetection: {
                            readonly type: "boolean";
                        };
                        readonly modes: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                            readonly default: readonly ["light", "dark"];
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {};
                };
                readonly navigation: {
                    readonly type: "object";
                    readonly properties: {
                        readonly nextButton: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                                readonly text: {
                                    readonly type: "string";
                                    readonly default: "Next to {{label}}";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {};
                        };
                        readonly previousButton: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                                readonly text: {
                                    readonly type: "string";
                                    readonly default: "Back to {{label}}";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {};
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {};
                };
                readonly codeSnippet: {
                    readonly type: "object";
                    readonly properties: {
                        readonly elementFormat: {
                            readonly type: "string";
                            readonly default: "icon";
                        };
                        readonly copy: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {
                                readonly hide: false;
                            };
                        };
                        readonly report: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                                readonly tooltipText: {
                                    readonly type: "string";
                                };
                                readonly buttonText: {
                                    readonly type: "string";
                                };
                                readonly label: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {
                                readonly hide: false;
                            };
                        };
                        readonly expand: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {
                                readonly hide: false;
                            };
                        };
                        readonly collapse: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {
                                readonly hide: false;
                            };
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {};
                };
                readonly markdown: {
                    readonly type: "object";
                    readonly properties: {
                        readonly frontMatterKeysToResolve: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                            readonly default: readonly ["image", "links"];
                        };
                        readonly partialsFolders: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                            readonly default: readonly ["_partials"];
                        };
                        readonly lastUpdatedBlock: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                                readonly format: {
                                    readonly type: "string";
                                    readonly enum: readonly ["timeago", "iso", "long", "short"];
                                    readonly default: "timeago";
                                };
                                readonly locale: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {};
                        };
                        readonly toc: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                                readonly header: {
                                    readonly type: "string";
                                    readonly default: "On this page";
                                };
                                readonly depth: {
                                    readonly type: "integer";
                                    readonly default: 3;
                                    readonly minimum: 1;
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {};
                        };
                        readonly editPage: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                                readonly baseUrl: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {};
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {};
                };
                readonly openapi: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly graphql: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly analytics: {
                    readonly type: "object";
                    readonly properties: {
                        readonly adobe: {
                            readonly type: "object";
                            readonly properties: {
                                readonly includeInDevelopment: {
                                    readonly type: "boolean";
                                };
                                readonly scriptUrl: {
                                    readonly type: "string";
                                };
                                readonly pageViewEventName: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["scriptUrl"];
                        };
                        readonly amplitude: {
                            readonly type: "object";
                            readonly properties: {
                                readonly includeInDevelopment: {
                                    readonly type: "boolean";
                                };
                                readonly apiKey: {
                                    readonly type: "string";
                                };
                                readonly head: {
                                    readonly type: "boolean";
                                };
                                readonly respectDNT: {
                                    readonly type: "boolean";
                                };
                                readonly exclude: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                    };
                                };
                                readonly outboundClickEventName: {
                                    readonly type: "string";
                                };
                                readonly pageViewEventName: {
                                    readonly type: "string";
                                };
                                readonly amplitudeConfig: {
                                    readonly type: "object";
                                    readonly additionalProperties: true;
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["apiKey"];
                        };
                        readonly fullstory: {
                            readonly type: "object";
                            readonly properties: {
                                readonly includeInDevelopment: {
                                    readonly type: "boolean";
                                };
                                readonly orgId: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["orgId"];
                        };
                        readonly heap: {
                            readonly type: "object";
                            readonly properties: {
                                readonly includeInDevelopment: {
                                    readonly type: "boolean";
                                };
                                readonly appId: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["appId"];
                        };
                        readonly rudderstack: {
                            readonly type: "object";
                            readonly properties: {
                                readonly includeInDevelopment: {
                                    readonly type: "boolean";
                                };
                                readonly writeKey: {
                                    readonly type: "string";
                                    readonly minLength: 10;
                                };
                                readonly trackPage: {
                                    readonly type: "boolean";
                                };
                                readonly dataPlaneUrl: {
                                    readonly type: "string";
                                };
                                readonly controlPlaneUrl: {
                                    readonly type: "string";
                                };
                                readonly sdkUrl: {
                                    readonly type: "string";
                                };
                                readonly loadOptions: {
                                    readonly type: "object";
                                    readonly additionalProperties: true;
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["writeKey"];
                        };
                        readonly segment: {
                            readonly type: "object";
                            readonly properties: {
                                readonly includeInDevelopment: {
                                    readonly type: "boolean";
                                };
                                readonly writeKey: {
                                    readonly type: "string";
                                    readonly minLength: 10;
                                };
                                readonly trackPage: {
                                    readonly type: "boolean";
                                };
                                readonly includeTitleInPageCall: {
                                    readonly type: "boolean";
                                };
                                readonly host: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["writeKey"];
                        };
                        readonly gtm: {
                            readonly type: "object";
                            readonly properties: {
                                readonly includeInDevelopment: {
                                    readonly type: "boolean";
                                };
                                readonly trackingId: {
                                    readonly type: "string";
                                };
                                readonly gtmAuth: {
                                    readonly type: "string";
                                };
                                readonly gtmPreview: {
                                    readonly type: "string";
                                };
                                readonly defaultDataLayer: {};
                                readonly dataLayerName: {
                                    readonly type: "string";
                                };
                                readonly enableWebVitalsTracking: {
                                    readonly type: "boolean";
                                };
                                readonly selfHostedOrigin: {
                                    readonly type: "string";
                                };
                                readonly pageViewEventName: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["trackingId"];
                        };
                        readonly ga: {
                            readonly type: "object";
                            readonly properties: {
                                readonly includeInDevelopment: {
                                    readonly type: "boolean";
                                };
                                readonly trackingId: {
                                    readonly type: "string";
                                };
                                readonly conversionId: {
                                    readonly type: "string";
                                };
                                readonly floodlightId: {
                                    readonly type: "string";
                                };
                                readonly head: {
                                    readonly type: "boolean";
                                };
                                readonly respectDNT: {
                                    readonly type: "boolean";
                                };
                                readonly exclude: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                    };
                                };
                                readonly optimizeId: {
                                    readonly type: "string";
                                };
                                readonly anonymizeIp: {
                                    readonly type: "boolean";
                                };
                                readonly cookieExpires: {
                                    readonly type: "number";
                                };
                                readonly trackers: {
                                    readonly type: "object";
                                    readonly additionalProperties: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly includeInDevelopment: {
                                                readonly type: "boolean";
                                            };
                                            readonly trackingId: {
                                                readonly type: "string";
                                            };
                                            readonly conversionId: {
                                                readonly type: "string";
                                            };
                                            readonly floodlightId: {
                                                readonly type: "string";
                                            };
                                            readonly optimizeId: {
                                                readonly type: "string";
                                            };
                                            readonly exclude: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["trackingId"];
                                    };
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["trackingId"];
                        };
                    };
                };
                readonly userProfile: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly loginLabel: {
                            readonly type: "string";
                            readonly default: "Login";
                        };
                        readonly logoutLabel: {
                            readonly type: "string";
                            readonly default: "Logout";
                        };
                        readonly menu: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly label: {
                                        readonly type: "string";
                                    };
                                    readonly external: {
                                        readonly type: "boolean";
                                    };
                                    readonly link: {
                                        readonly type: "string";
                                    };
                                    readonly separatorLine: {
                                        readonly type: "boolean";
                                    };
                                };
                                readonly additionalProperties: true;
                            };
                            readonly default: readonly [];
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {};
                };
                readonly versionPicker: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly showForUnversioned: {
                            readonly type: "boolean";
                        };
                    };
                };
                readonly breadcrumbs: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly prefixItems: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly label: {
                                        readonly type: "string";
                                    };
                                    readonly labelTranslationKey: {
                                        readonly type: "string";
                                    };
                                    readonly page: {
                                        readonly type: "string";
                                    };
                                };
                                readonly additionalProperties: false;
                                readonly default: {};
                            };
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {};
                };
                readonly catalog: {
                    readonly type: "object";
                    readonly patternProperties: {
                        readonly '.*': {
                            readonly type: "object";
                            readonly additionalProperties: true;
                            readonly required: readonly ["slug", "items"];
                            readonly properties: {
                                readonly slug: {
                                    readonly type: "string";
                                };
                                readonly filters: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["title", "property"];
                                        readonly properties: {
                                            readonly type: {
                                                readonly type: "string";
                                                readonly enum: readonly ["select", "checkboxes", "date-range"];
                                            };
                                            readonly title: {
                                                readonly type: "string";
                                            };
                                            readonly titleTranslationKey: {
                                                readonly type: "string";
                                            };
                                            readonly property: {
                                                readonly type: "string";
                                            };
                                            readonly parentFilter: {
                                                readonly type: "string";
                                            };
                                            readonly valuesMapping: {
                                                readonly type: "object";
                                                readonly additionalProperties: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly missingCategoryName: {
                                                readonly type: "string";
                                            };
                                            readonly missingCategoryNameTranslationKey: {
                                                readonly type: "string";
                                            };
                                            readonly options: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                    };
                                };
                                readonly groupByFirstFilter: {
                                    readonly type: "boolean";
                                };
                                readonly filterValuesCasing: {
                                    readonly type: "string";
                                    readonly enum: readonly ["sentence", "original", "lowercase", "uppercase"];
                                };
                                readonly items: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly properties: {
                                            readonly items: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly page: {
                                                            readonly type: "string";
                                                        };
                                                        readonly directory: {
                                                            readonly type: "string";
                                                        };
                                                        readonly disconnect: {
                                                            readonly type: "boolean";
                                                            readonly default: false;
                                                        };
                                                        readonly group: {
                                                            readonly type: "string";
                                                        };
                                                        readonly label: {
                                                            readonly type: "string";
                                                        };
                                                        readonly href: {
                                                            readonly type: "string";
                                                        };
                                                        readonly external: {
                                                            readonly type: "boolean";
                                                        };
                                                        readonly labelTranslationKey: {
                                                            readonly type: "string";
                                                        };
                                                        readonly groupTranslationKey: {
                                                            readonly type: "string";
                                                        };
                                                        readonly icon: {
                                                            readonly oneOf: readonly [{
                                                                readonly type: "string";
                                                            }, {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly srcSet: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                                readonly required: readonly ["srcSet"];
                                                            }];
                                                        };
                                                        readonly separator: {
                                                            readonly type: "string";
                                                        };
                                                        readonly separatorLine: {
                                                            readonly type: "boolean";
                                                        };
                                                        readonly linePosition: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["top", "bottom"];
                                                            readonly default: "top";
                                                        };
                                                        readonly version: {
                                                            readonly type: "string";
                                                        };
                                                        readonly menuStyle: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["drilldown"];
                                                        };
                                                        readonly expanded: {
                                                            readonly type: "string";
                                                            readonly const: "always";
                                                        };
                                                        readonly selectFirstItemOnExpand: {
                                                            readonly type: "boolean";
                                                        };
                                                        readonly flatten: {
                                                            readonly type: "boolean";
                                                        };
                                                        readonly linkedSidebars: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly items: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "object";
                                                                readonly additionalProperties: true;
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                            readonly page: {
                                                readonly type: "string";
                                            };
                                            readonly directory: {
                                                readonly type: "string";
                                            };
                                            readonly disconnect: {
                                                readonly type: "boolean";
                                                readonly default: false;
                                            };
                                            readonly group: {
                                                readonly type: "string";
                                            };
                                            readonly label: {
                                                readonly type: "string";
                                            };
                                            readonly href: {
                                                readonly type: "string";
                                            };
                                            readonly external: {
                                                readonly type: "boolean";
                                            };
                                            readonly labelTranslationKey: {
                                                readonly type: "string";
                                            };
                                            readonly groupTranslationKey: {
                                                readonly type: "string";
                                            };
                                            readonly icon: {
                                                readonly oneOf: readonly [{
                                                    readonly type: "string";
                                                }, {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly srcSet: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly required: readonly ["srcSet"];
                                                }];
                                            };
                                            readonly separator: {
                                                readonly type: "string";
                                            };
                                            readonly separatorLine: {
                                                readonly type: "boolean";
                                            };
                                            readonly linePosition: {
                                                readonly type: "string";
                                                readonly enum: readonly ["top", "bottom"];
                                                readonly default: "top";
                                            };
                                            readonly version: {
                                                readonly type: "string";
                                            };
                                            readonly menuStyle: {
                                                readonly type: "string";
                                                readonly enum: readonly ["drilldown"];
                                            };
                                            readonly expanded: {
                                                readonly type: "string";
                                                readonly const: "always";
                                            };
                                            readonly selectFirstItemOnExpand: {
                                                readonly type: "boolean";
                                            };
                                            readonly flatten: {
                                                readonly type: "boolean";
                                            };
                                            readonly linkedSidebars: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly type: "object";
                                    };
                                };
                                readonly requiredPermission: {
                                    readonly type: "string";
                                };
                                readonly separateVersions: {
                                    readonly type: "boolean";
                                };
                                readonly title: {
                                    readonly type: "string";
                                };
                                readonly titleTranslationKey: {
                                    readonly type: "string";
                                };
                                readonly description: {
                                    readonly type: "string";
                                };
                                readonly descriptionTranslationKey: {
                                    readonly type: "string";
                                };
                            };
                        };
                    };
                };
                readonly scorecard: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                    readonly required: readonly [];
                    readonly properties: {
                        readonly ignoreNonCompliant: {
                            readonly type: "boolean";
                            readonly default: false;
                        };
                        readonly teamMetadataProperty: {
                            readonly type: "object";
                            readonly properties: {
                                readonly property: {
                                    readonly type: "string";
                                };
                                readonly label: {
                                    readonly type: "string";
                                };
                                readonly default: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly levels: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly required: readonly ["name"];
                                readonly properties: {
                                    readonly name: {
                                        readonly type: "string";
                                    };
                                    readonly color: {
                                        readonly type: "string";
                                    };
                                    readonly extends: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly rules: {
                                        readonly type: "object";
                                        readonly additionalProperties: {
                                            readonly oneOf: readonly [{
                                                readonly type: "string";
                                            }, {
                                                readonly type: "object";
                                            }];
                                        };
                                    };
                                };
                                readonly additionalProperties: false;
                            };
                        };
                        readonly targets: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly required: readonly ["where"];
                                readonly properties: {
                                    readonly minimumLevel: {
                                        readonly type: "string";
                                    };
                                    readonly where: {
                                        readonly type: "object";
                                        readonly required: readonly ["metadata"];
                                        readonly properties: {
                                            readonly metadata: {
                                                readonly type: "object";
                                                readonly additionalProperties: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly additionalProperties: false;
                                    };
                                };
                                readonly additionalProperties: false;
                            };
                        };
                    };
                };
            };
            readonly additionalProperties: true;
            readonly default: {};
        };
        readonly reunite: {
            readonly type: "object";
            readonly properties: {
                readonly ignoreLinkChecker: {
                    readonly type: "boolean";
                };
            };
            readonly additionalProperties: false;
        };
        readonly plugins: {
            readonly type: "array";
            readonly items: {
                readonly type: "string";
            };
        };
    };
    readonly default: {};
    readonly additionalProperties: false;
    readonly type: "object";
};
